{"version":3,"file":"static/js/6.5c5e6218.chunk.js","mappings":"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","sources":["../node_modules/@babel/runtime/helpers/esm/superPropBase.js","../node_modules/@babel/runtime/helpers/esm/get.js","../node_modules/engine.io-parser/build/esm/commons.js","../node_modules/engine.io-parser/build/esm/encodePacket.browser.js","../node_modules/engine.io-parser/build/esm/contrib/base64-arraybuffer.js","../node_modules/engine.io-parser/build/esm/index.js","../node_modules/engine.io-parser/build/esm/decodePacket.browser.js","../node_modules/@socket.io/component-emitter/index.mjs","../node_modules/engine.io-client/build/esm/globalThis.browser.js","../node_modules/engine.io-client/build/esm/util.js","../node_modules/engine.io-client/build/esm/contrib/parseqs.js","../node_modules/engine.io-client/build/esm/transport.js","../node_modules/engine.io-client/build/esm/contrib/yeast.js","../node_modules/engine.io-client/build/esm/contrib/has-cors.js","../node_modules/engine.io-client/build/esm/transports/xmlhttprequest.browser.js","../node_modules/engine.io-client/build/esm/transports/polling.js","../node_modules/engine.io-client/build/esm/transports/websocket-constructor.browser.js","../node_modules/engine.io-client/build/esm/transports/websocket.js","../node_modules/engine.io-client/build/esm/transports/webtransport.js","../node_modules/engine.io-client/build/esm/transports/index.js","../node_modules/engine.io-client/build/esm/contrib/parseuri.js","../node_modules/engine.io-client/build/esm/socket.js","../node_modules/engine.io-client/build/esm/index.js","../node_modules/socket.io-parser/build/esm/is-binary.js","../node_modules/socket.io-parser/build/esm/binary.js","../node_modules/socket.io-parser/build/esm/index.js","../node_modules/socket.io-client/build/esm/on.js","../node_modules/socket.io-client/build/esm/socket.js","../node_modules/socket.io-client/build/esm/contrib/backo2.js","../node_modules/socket.io-client/build/esm/manager.js","../node_modules/socket.io-client/build/esm/index.js","../node_modules/socket.io-client/build/esm/url.js"],"sourcesContent":["import getPrototypeOf from \"./getPrototypeOf.js\";\nexport default function _superPropBase(object, property) {\n  while (!Object.prototype.hasOwnProperty.call(object, property)) {\n    object = getPrototypeOf(object);\n    if (object === null) break;\n  }\n  return object;\n}","import superPropBase from \"./superPropBase.js\";\nexport default function _get() {\n  if (typeof Reflect !== \"undefined\" && Reflect.get) {\n    _get = Reflect.get.bind();\n  } else {\n    _get = function _get(target, property, receiver) {\n      var base = superPropBase(target, property);\n      if (!base) return;\n      var desc = Object.getOwnPropertyDescriptor(base, property);\n      if (desc.get) {\n        return desc.get.call(arguments.length < 3 ? target : receiver);\n      }\n      return desc.value;\n    };\n  }\n  return _get.apply(this, arguments);\n}","const PACKET_TYPES = Object.create(null); // no Map = no polyfill\nPACKET_TYPES[\"open\"] = \"0\";\nPACKET_TYPES[\"close\"] = \"1\";\nPACKET_TYPES[\"ping\"] = \"2\";\nPACKET_TYPES[\"pong\"] = \"3\";\nPACKET_TYPES[\"message\"] = \"4\";\nPACKET_TYPES[\"upgrade\"] = \"5\";\nPACKET_TYPES[\"noop\"] = \"6\";\nconst PACKET_TYPES_REVERSE = Object.create(null);\nObject.keys(PACKET_TYPES).forEach(key => {\n    PACKET_TYPES_REVERSE[PACKET_TYPES[key]] = key;\n});\nconst ERROR_PACKET = { type: \"error\", data: \"parser error\" };\nexport { PACKET_TYPES, PACKET_TYPES_REVERSE, ERROR_PACKET };\n","import { PACKET_TYPES } from \"./commons.js\";\nconst withNativeBlob = typeof Blob === \"function\" ||\n    (typeof Blob !== \"undefined\" &&\n        Object.prototype.toString.call(Blob) === \"[object BlobConstructor]\");\nconst withNativeArrayBuffer = typeof ArrayBuffer === \"function\";\n// ArrayBuffer.isView method is not defined in IE10\nconst isView = obj => {\n    return typeof ArrayBuffer.isView === \"function\"\n        ? ArrayBuffer.isView(obj)\n        : obj && obj.buffer instanceof ArrayBuffer;\n};\nconst encodePacket = ({ type, data }, supportsBinary, callback) => {\n    if (withNativeBlob && data instanceof Blob) {\n        if (supportsBinary) {\n            return callback(data);\n        }\n        else {\n            return encodeBlobAsBase64(data, callback);\n        }\n    }\n    else if (withNativeArrayBuffer &&\n        (data instanceof ArrayBuffer || isView(data))) {\n        if (supportsBinary) {\n            return callback(data);\n        }\n        else {\n            return encodeBlobAsBase64(new Blob([data]), callback);\n        }\n    }\n    // plain string\n    return callback(PACKET_TYPES[type] + (data || \"\"));\n};\nconst encodeBlobAsBase64 = (data, callback) => {\n    const fileReader = new FileReader();\n    fileReader.onload = function () {\n        const content = fileReader.result.split(\",\")[1];\n        callback(\"b\" + (content || \"\"));\n    };\n    return fileReader.readAsDataURL(data);\n};\nfunction toArray(data) {\n    if (data instanceof Uint8Array) {\n        return data;\n    }\n    else if (data instanceof ArrayBuffer) {\n        return new Uint8Array(data);\n    }\n    else {\n        return new Uint8Array(data.buffer, data.byteOffset, data.byteLength);\n    }\n}\nlet TEXT_ENCODER;\nexport function encodePacketToBinary(packet, callback) {\n    if (withNativeBlob && packet.data instanceof Blob) {\n        return packet.data\n            .arrayBuffer()\n            .then(toArray)\n            .then(callback);\n    }\n    else if (withNativeArrayBuffer &&\n        (packet.data instanceof ArrayBuffer || isView(packet.data))) {\n        return callback(toArray(packet.data));\n    }\n    encodePacket(packet, false, encoded => {\n        if (!TEXT_ENCODER) {\n            TEXT_ENCODER = new TextEncoder();\n        }\n        callback(TEXT_ENCODER.encode(encoded));\n    });\n}\nexport { encodePacket };\n","// imported from https://github.com/socketio/base64-arraybuffer\nconst chars = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/';\n// Use a lookup table to find the index.\nconst lookup = typeof Uint8Array === 'undefined' ? [] : new Uint8Array(256);\nfor (let i = 0; i < chars.length; i++) {\n    lookup[chars.charCodeAt(i)] = i;\n}\nexport const encode = (arraybuffer) => {\n    let bytes = new Uint8Array(arraybuffer), i, len = bytes.length, base64 = '';\n    for (i = 0; i < len; i += 3) {\n        base64 += chars[bytes[i] >> 2];\n        base64 += chars[((bytes[i] & 3) << 4) | (bytes[i + 1] >> 4)];\n        base64 += chars[((bytes[i + 1] & 15) << 2) | (bytes[i + 2] >> 6)];\n        base64 += chars[bytes[i + 2] & 63];\n    }\n    if (len % 3 === 2) {\n        base64 = base64.substring(0, base64.length - 1) + '=';\n    }\n    else if (len % 3 === 1) {\n        base64 = base64.substring(0, base64.length - 2) + '==';\n    }\n    return base64;\n};\nexport const decode = (base64) => {\n    let bufferLength = base64.length * 0.75, len = base64.length, i, p = 0, encoded1, encoded2, encoded3, encoded4;\n    if (base64[base64.length - 1] === '=') {\n        bufferLength--;\n        if (base64[base64.length - 2] === '=') {\n            bufferLength--;\n        }\n    }\n    const arraybuffer = new ArrayBuffer(bufferLength), bytes = new Uint8Array(arraybuffer);\n    for (i = 0; i < len; i += 4) {\n        encoded1 = lookup[base64.charCodeAt(i)];\n        encoded2 = lookup[base64.charCodeAt(i + 1)];\n        encoded3 = lookup[base64.charCodeAt(i + 2)];\n        encoded4 = lookup[base64.charCodeAt(i + 3)];\n        bytes[p++] = (encoded1 << 2) | (encoded2 >> 4);\n        bytes[p++] = ((encoded2 & 15) << 4) | (encoded3 >> 2);\n        bytes[p++] = ((encoded3 & 3) << 6) | (encoded4 & 63);\n    }\n    return arraybuffer;\n};\n","import { encodePacket, encodePacketToBinary } from \"./encodePacket.js\";\nimport { decodePacket } from \"./decodePacket.js\";\nconst SEPARATOR = String.fromCharCode(30); // see https://en.wikipedia.org/wiki/Delimiter#ASCII_delimited_text\nconst encodePayload = (packets, callback) => {\n    // some packets may be added to the array while encoding, so the initial length must be saved\n    const length = packets.length;\n    const encodedPackets = new Array(length);\n    let count = 0;\n    packets.forEach((packet, i) => {\n        // force base64 encoding for binary packets\n        encodePacket(packet, false, encodedPacket => {\n            encodedPackets[i] = encodedPacket;\n            if (++count === length) {\n                callback(encodedPackets.join(SEPARATOR));\n            }\n        });\n    });\n};\nconst decodePayload = (encodedPayload, binaryType) => {\n    const encodedPackets = encodedPayload.split(SEPARATOR);\n    const packets = [];\n    for (let i = 0; i < encodedPackets.length; i++) {\n        const decodedPacket = decodePacket(encodedPackets[i], binaryType);\n        packets.push(decodedPacket);\n        if (decodedPacket.type === \"error\") {\n            break;\n        }\n    }\n    return packets;\n};\nlet TEXT_DECODER;\nexport function decodePacketFromBinary(data, isBinary, binaryType) {\n    if (!TEXT_DECODER) {\n        // lazily created for compatibility with old browser platforms\n        TEXT_DECODER = new TextDecoder();\n    }\n    // 48 === \"0\".charCodeAt(0) (OPEN packet type)\n    // 54 === \"6\".charCodeAt(0) (NOOP packet type)\n    const isPlainBinary = isBinary || data[0] < 48 || data[0] > 54;\n    return decodePacket(isPlainBinary ? data : TEXT_DECODER.decode(data), binaryType);\n}\nexport const protocol = 4;\nexport { encodePacket, encodePacketToBinary, encodePayload, decodePacket, decodePayload };\n","import { ERROR_PACKET, PACKET_TYPES_REVERSE } from \"./commons.js\";\nimport { decode } from \"./contrib/base64-arraybuffer.js\";\nconst withNativeArrayBuffer = typeof ArrayBuffer === \"function\";\nexport const decodePacket = (encodedPacket, binaryType) => {\n    if (typeof encodedPacket !== \"string\") {\n        return {\n            type: \"message\",\n            data: mapBinary(encodedPacket, binaryType)\n        };\n    }\n    const type = encodedPacket.charAt(0);\n    if (type === \"b\") {\n        return {\n            type: \"message\",\n            data: decodeBase64Packet(encodedPacket.substring(1), binaryType)\n        };\n    }\n    const packetType = PACKET_TYPES_REVERSE[type];\n    if (!packetType) {\n        return ERROR_PACKET;\n    }\n    return encodedPacket.length > 1\n        ? {\n            type: PACKET_TYPES_REVERSE[type],\n            data: encodedPacket.substring(1)\n        }\n        : {\n            type: PACKET_TYPES_REVERSE[type]\n        };\n};\nconst decodeBase64Packet = (data, binaryType) => {\n    if (withNativeArrayBuffer) {\n        const decoded = decode(data);\n        return mapBinary(decoded, binaryType);\n    }\n    else {\n        return { base64: true, data }; // fallback for old browsers\n    }\n};\nconst mapBinary = (data, binaryType) => {\n    switch (binaryType) {\n        case \"blob\":\n            if (data instanceof Blob) {\n                // from WebSocket + binaryType \"blob\"\n                return data;\n            }\n            else {\n                // from HTTP long-polling or WebTransport\n                return new Blob([data]);\n            }\n        case \"arraybuffer\":\n        default:\n            if (data instanceof ArrayBuffer) {\n                // from HTTP long-polling (base64) or WebSocket + binaryType \"arraybuffer\"\n                return data;\n            }\n            else {\n                // from WebTransport (Uint8Array)\n                return data.buffer;\n            }\n    }\n};\n","/**\n * Initialize a new `Emitter`.\n *\n * @api public\n */\n\nexport function Emitter(obj) {\n  if (obj) return mixin(obj);\n}\n\n/**\n * Mixin the emitter properties.\n *\n * @param {Object} obj\n * @return {Object}\n * @api private\n */\n\nfunction mixin(obj) {\n  for (var key in Emitter.prototype) {\n    obj[key] = Emitter.prototype[key];\n  }\n  return obj;\n}\n\n/**\n * Listen on the given `event` with `fn`.\n *\n * @param {String} event\n * @param {Function} fn\n * @return {Emitter}\n * @api public\n */\n\nEmitter.prototype.on =\nEmitter.prototype.addEventListener = function(event, fn){\n  this._callbacks = this._callbacks || {};\n  (this._callbacks['$' + event] = this._callbacks['$' + event] || [])\n    .push(fn);\n  return this;\n};\n\n/**\n * Adds an `event` listener that will be invoked a single\n * time then automatically removed.\n *\n * @param {String} event\n * @param {Function} fn\n * @return {Emitter}\n * @api public\n */\n\nEmitter.prototype.once = function(event, fn){\n  function on() {\n    this.off(event, on);\n    fn.apply(this, arguments);\n  }\n\n  on.fn = fn;\n  this.on(event, on);\n  return this;\n};\n\n/**\n * Remove the given callback for `event` or all\n * registered callbacks.\n *\n * @param {String} event\n * @param {Function} fn\n * @return {Emitter}\n * @api public\n */\n\nEmitter.prototype.off =\nEmitter.prototype.removeListener =\nEmitter.prototype.removeAllListeners =\nEmitter.prototype.removeEventListener = function(event, fn){\n  this._callbacks = this._callbacks || {};\n\n  // all\n  if (0 == arguments.length) {\n    this._callbacks = {};\n    return this;\n  }\n\n  // specific event\n  var callbacks = this._callbacks['$' + event];\n  if (!callbacks) return this;\n\n  // remove all handlers\n  if (1 == arguments.length) {\n    delete this._callbacks['$' + event];\n    return this;\n  }\n\n  // remove specific handler\n  var cb;\n  for (var i = 0; i < callbacks.length; i++) {\n    cb = callbacks[i];\n    if (cb === fn || cb.fn === fn) {\n      callbacks.splice(i, 1);\n      break;\n    }\n  }\n\n  // Remove event specific arrays for event types that no\n  // one is subscribed for to avoid memory leak.\n  if (callbacks.length === 0) {\n    delete this._callbacks['$' + event];\n  }\n\n  return this;\n};\n\n/**\n * Emit `event` with the given args.\n *\n * @param {String} event\n * @param {Mixed} ...\n * @return {Emitter}\n */\n\nEmitter.prototype.emit = function(event){\n  this._callbacks = this._callbacks || {};\n\n  var args = new Array(arguments.length - 1)\n    , callbacks = this._callbacks['$' + event];\n\n  for (var i = 1; i < arguments.length; i++) {\n    args[i - 1] = arguments[i];\n  }\n\n  if (callbacks) {\n    callbacks = callbacks.slice(0);\n    for (var i = 0, len = callbacks.length; i < len; ++i) {\n      callbacks[i].apply(this, args);\n    }\n  }\n\n  return this;\n};\n\n// alias used for reserved events (protected method)\nEmitter.prototype.emitReserved = Emitter.prototype.emit;\n\n/**\n * Return array of callbacks for `event`.\n *\n * @param {String} event\n * @return {Array}\n * @api public\n */\n\nEmitter.prototype.listeners = function(event){\n  this._callbacks = this._callbacks || {};\n  return this._callbacks['$' + event] || [];\n};\n\n/**\n * Check if this emitter has `event` handlers.\n *\n * @param {String} event\n * @return {Boolean}\n * @api public\n */\n\nEmitter.prototype.hasListeners = function(event){\n  return !! this.listeners(event).length;\n};\n","export const globalThisShim = (() => {\n    if (typeof self !== \"undefined\") {\n        return self;\n    }\n    else if (typeof window !== \"undefined\") {\n        return window;\n    }\n    else {\n        return Function(\"return this\")();\n    }\n})();\n","import { globalThisShim as globalThis } from \"./globalThis.js\";\nexport function pick(obj, ...attr) {\n    return attr.reduce((acc, k) => {\n        if (obj.hasOwnProperty(k)) {\n            acc[k] = obj[k];\n        }\n        return acc;\n    }, {});\n}\n// Keep a reference to the real timeout functions so they can be used when overridden\nconst NATIVE_SET_TIMEOUT = globalThis.setTimeout;\nconst NATIVE_CLEAR_TIMEOUT = globalThis.clearTimeout;\nexport function installTimerFunctions(obj, opts) {\n    if (opts.useNativeTimers) {\n        obj.setTimeoutFn = NATIVE_SET_TIMEOUT.bind(globalThis);\n        obj.clearTimeoutFn = NATIVE_CLEAR_TIMEOUT.bind(globalThis);\n    }\n    else {\n        obj.setTimeoutFn = globalThis.setTimeout.bind(globalThis);\n        obj.clearTimeoutFn = globalThis.clearTimeout.bind(globalThis);\n    }\n}\n// base64 encoded buffers are about 33% bigger (https://en.wikipedia.org/wiki/Base64)\nconst BASE64_OVERHEAD = 1.33;\n// we could also have used `new Blob([obj]).size`, but it isn't supported in IE9\nexport function byteLength(obj) {\n    if (typeof obj === \"string\") {\n        return utf8Length(obj);\n    }\n    // arraybuffer or blob\n    return Math.ceil((obj.byteLength || obj.size) * BASE64_OVERHEAD);\n}\nfunction utf8Length(str) {\n    let c = 0, length = 0;\n    for (let i = 0, l = str.length; i < l; i++) {\n        c = str.charCodeAt(i);\n        if (c < 0x80) {\n            length += 1;\n        }\n        else if (c < 0x800) {\n            length += 2;\n        }\n        else if (c < 0xd800 || c >= 0xe000) {\n            length += 3;\n        }\n        else {\n            i++;\n            length += 4;\n        }\n    }\n    return length;\n}\n","// imported from https://github.com/galkn/querystring\n/**\n * Compiles a querystring\n * Returns string representation of the object\n *\n * @param {Object}\n * @api private\n */\nexport function encode(obj) {\n    let str = '';\n    for (let i in obj) {\n        if (obj.hasOwnProperty(i)) {\n            if (str.length)\n                str += '&';\n            str += encodeURIComponent(i) + '=' + encodeURIComponent(obj[i]);\n        }\n    }\n    return str;\n}\n/**\n * Parses a simple querystring into an object\n *\n * @param {String} qs\n * @api private\n */\nexport function decode(qs) {\n    let qry = {};\n    let pairs = qs.split('&');\n    for (let i = 0, l = pairs.length; i < l; i++) {\n        let pair = pairs[i].split('=');\n        qry[decodeURIComponent(pair[0])] = decodeURIComponent(pair[1]);\n    }\n    return qry;\n}\n","import { decodePacket } from \"engine.io-parser\";\nimport { Emitter } from \"@socket.io/component-emitter\";\nimport { installTimerFunctions } from \"./util.js\";\nimport { encode } from \"./contrib/parseqs.js\";\nclass TransportError extends Error {\n    constructor(reason, description, context) {\n        super(reason);\n        this.description = description;\n        this.context = context;\n        this.type = \"TransportError\";\n    }\n}\nexport class Transport extends Emitter {\n    /**\n     * Transport abstract constructor.\n     *\n     * @param {Object} opts - options\n     * @protected\n     */\n    constructor(opts) {\n        super();\n        this.writable = false;\n        installTimerFunctions(this, opts);\n        this.opts = opts;\n        this.query = opts.query;\n        this.socket = opts.socket;\n    }\n    /**\n     * Emits an error.\n     *\n     * @param {String} reason\n     * @param description\n     * @param context - the error context\n     * @return {Transport} for chaining\n     * @protected\n     */\n    onError(reason, description, context) {\n        super.emitReserved(\"error\", new TransportError(reason, description, context));\n        return this;\n    }\n    /**\n     * Opens the transport.\n     */\n    open() {\n        this.readyState = \"opening\";\n        this.doOpen();\n        return this;\n    }\n    /**\n     * Closes the transport.\n     */\n    close() {\n        if (this.readyState === \"opening\" || this.readyState === \"open\") {\n            this.doClose();\n            this.onClose();\n        }\n        return this;\n    }\n    /**\n     * Sends multiple packets.\n     *\n     * @param {Array} packets\n     */\n    send(packets) {\n        if (this.readyState === \"open\") {\n            this.write(packets);\n        }\n        else {\n            // this might happen if the transport was silently closed in the beforeunload event handler\n        }\n    }\n    /**\n     * Called upon open\n     *\n     * @protected\n     */\n    onOpen() {\n        this.readyState = \"open\";\n        this.writable = true;\n        super.emitReserved(\"open\");\n    }\n    /**\n     * Called with data.\n     *\n     * @param {String} data\n     * @protected\n     */\n    onData(data) {\n        const packet = decodePacket(data, this.socket.binaryType);\n        this.onPacket(packet);\n    }\n    /**\n     * Called with a decoded packet.\n     *\n     * @protected\n     */\n    onPacket(packet) {\n        super.emitReserved(\"packet\", packet);\n    }\n    /**\n     * Called upon close.\n     *\n     * @protected\n     */\n    onClose(details) {\n        this.readyState = \"closed\";\n        super.emitReserved(\"close\", details);\n    }\n    /**\n     * Pauses the transport, in order not to lose packets during an upgrade.\n     *\n     * @param onPause\n     */\n    pause(onPause) { }\n    createUri(schema, query = {}) {\n        return (schema +\n            \"://\" +\n            this._hostname() +\n            this._port() +\n            this.opts.path +\n            this._query(query));\n    }\n    _hostname() {\n        const hostname = this.opts.hostname;\n        return hostname.indexOf(\":\") === -1 ? hostname : \"[\" + hostname + \"]\";\n    }\n    _port() {\n        if (this.opts.port &&\n            ((this.opts.secure && Number(this.opts.port !== 443)) ||\n                (!this.opts.secure && Number(this.opts.port) !== 80))) {\n            return \":\" + this.opts.port;\n        }\n        else {\n            return \"\";\n        }\n    }\n    _query(query) {\n        const encodedQuery = encode(query);\n        return encodedQuery.length ? \"?\" + encodedQuery : \"\";\n    }\n}\n","// imported from https://github.com/unshiftio/yeast\n'use strict';\nconst alphabet = '0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz-_'.split(''), length = 64, map = {};\nlet seed = 0, i = 0, prev;\n/**\n * Return a string representing the specified number.\n *\n * @param {Number} num The number to convert.\n * @returns {String} The string representation of the number.\n * @api public\n */\nexport function encode(num) {\n    let encoded = '';\n    do {\n        encoded = alphabet[num % length] + encoded;\n        num = Math.floor(num / length);\n    } while (num > 0);\n    return encoded;\n}\n/**\n * Return the integer value specified by the given string.\n *\n * @param {String} str The string to convert.\n * @returns {Number} The integer value represented by the string.\n * @api public\n */\nexport function decode(str) {\n    let decoded = 0;\n    for (i = 0; i < str.length; i++) {\n        decoded = decoded * length + map[str.charAt(i)];\n    }\n    return decoded;\n}\n/**\n * Yeast: A tiny growing id generator.\n *\n * @returns {String} A unique id.\n * @api public\n */\nexport function yeast() {\n    const now = encode(+new Date());\n    if (now !== prev)\n        return seed = 0, prev = now;\n    return now + '.' + encode(seed++);\n}\n//\n// Map each character to its index.\n//\nfor (; i < length; i++)\n    map[alphabet[i]] = i;\n","// imported from https://github.com/component/has-cors\nlet value = false;\ntry {\n    value = typeof XMLHttpRequest !== 'undefined' &&\n        'withCredentials' in new XMLHttpRequest();\n}\ncatch (err) {\n    // if XMLHttp support is disabled in IE then it will throw\n    // when trying to create\n}\nexport const hasCORS = value;\n","// browser shim for xmlhttprequest module\nimport { hasCORS } from \"../contrib/has-cors.js\";\nimport { globalThisShim as globalThis } from \"../globalThis.js\";\nexport function XHR(opts) {\n    const xdomain = opts.xdomain;\n    // XMLHttpRequest can be disabled on IE\n    try {\n        if (\"undefined\" !== typeof XMLHttpRequest && (!xdomain || hasCORS)) {\n            return new XMLHttpRequest();\n        }\n    }\n    catch (e) { }\n    if (!xdomain) {\n        try {\n            return new globalThis[[\"Active\"].concat(\"Object\").join(\"X\")](\"Microsoft.XMLHTTP\");\n        }\n        catch (e) { }\n    }\n}\nexport function createCookieJar() { }\n","import { Transport } from \"../transport.js\";\nimport { yeast } from \"../contrib/yeast.js\";\nimport { encodePayload, decodePayload } from \"engine.io-parser\";\nimport { createCookieJar, XHR as XMLHttpRequest, } from \"./xmlhttprequest.js\";\nimport { Emitter } from \"@socket.io/component-emitter\";\nimport { installTimerFunctions, pick } from \"../util.js\";\nimport { globalThisShim as globalThis } from \"../globalThis.js\";\nfunction empty() { }\nconst hasXHR2 = (function () {\n    const xhr = new XMLHttpRequest({\n        xdomain: false,\n    });\n    return null != xhr.responseType;\n})();\nexport class Polling extends Transport {\n    /**\n     * XHR Polling constructor.\n     *\n     * @param {Object} opts\n     * @package\n     */\n    constructor(opts) {\n        super(opts);\n        this.polling = false;\n        if (typeof location !== \"undefined\") {\n            const isSSL = \"https:\" === location.protocol;\n            let port = location.port;\n            // some user agents have empty `location.port`\n            if (!port) {\n                port = isSSL ? \"443\" : \"80\";\n            }\n            this.xd =\n                (typeof location !== \"undefined\" &&\n                    opts.hostname !== location.hostname) ||\n                    port !== opts.port;\n        }\n        /**\n         * XHR supports binary\n         */\n        const forceBase64 = opts && opts.forceBase64;\n        this.supportsBinary = hasXHR2 && !forceBase64;\n        if (this.opts.withCredentials) {\n            this.cookieJar = createCookieJar();\n        }\n    }\n    get name() {\n        return \"polling\";\n    }\n    /**\n     * Opens the socket (triggers polling). We write a PING message to determine\n     * when the transport is open.\n     *\n     * @protected\n     */\n    doOpen() {\n        this.poll();\n    }\n    /**\n     * Pauses polling.\n     *\n     * @param {Function} onPause - callback upon buffers are flushed and transport is paused\n     * @package\n     */\n    pause(onPause) {\n        this.readyState = \"pausing\";\n        const pause = () => {\n            this.readyState = \"paused\";\n            onPause();\n        };\n        if (this.polling || !this.writable) {\n            let total = 0;\n            if (this.polling) {\n                total++;\n                this.once(\"pollComplete\", function () {\n                    --total || pause();\n                });\n            }\n            if (!this.writable) {\n                total++;\n                this.once(\"drain\", function () {\n                    --total || pause();\n                });\n            }\n        }\n        else {\n            pause();\n        }\n    }\n    /**\n     * Starts polling cycle.\n     *\n     * @private\n     */\n    poll() {\n        this.polling = true;\n        this.doPoll();\n        this.emitReserved(\"poll\");\n    }\n    /**\n     * Overloads onData to detect payloads.\n     *\n     * @protected\n     */\n    onData(data) {\n        const callback = (packet) => {\n            // if its the first message we consider the transport open\n            if (\"opening\" === this.readyState && packet.type === \"open\") {\n                this.onOpen();\n            }\n            // if its a close packet, we close the ongoing requests\n            if (\"close\" === packet.type) {\n                this.onClose({ description: \"transport closed by the server\" });\n                return false;\n            }\n            // otherwise bypass onData and handle the message\n            this.onPacket(packet);\n        };\n        // decode payload\n        decodePayload(data, this.socket.binaryType).forEach(callback);\n        // if an event did not trigger closing\n        if (\"closed\" !== this.readyState) {\n            // if we got data we're not polling\n            this.polling = false;\n            this.emitReserved(\"pollComplete\");\n            if (\"open\" === this.readyState) {\n                this.poll();\n            }\n            else {\n            }\n        }\n    }\n    /**\n     * For polling, send a close packet.\n     *\n     * @protected\n     */\n    doClose() {\n        const close = () => {\n            this.write([{ type: \"close\" }]);\n        };\n        if (\"open\" === this.readyState) {\n            close();\n        }\n        else {\n            // in case we're trying to close while\n            // handshaking is in progress (GH-164)\n            this.once(\"open\", close);\n        }\n    }\n    /**\n     * Writes a packets payload.\n     *\n     * @param {Array} packets - data packets\n     * @protected\n     */\n    write(packets) {\n        this.writable = false;\n        encodePayload(packets, (data) => {\n            this.doWrite(data, () => {\n                this.writable = true;\n                this.emitReserved(\"drain\");\n            });\n        });\n    }\n    /**\n     * Generates uri for connection.\n     *\n     * @private\n     */\n    uri() {\n        const schema = this.opts.secure ? \"https\" : \"http\";\n        const query = this.query || {};\n        // cache busting is forced\n        if (false !== this.opts.timestampRequests) {\n            query[this.opts.timestampParam] = yeast();\n        }\n        if (!this.supportsBinary && !query.sid) {\n            query.b64 = 1;\n        }\n        return this.createUri(schema, query);\n    }\n    /**\n     * Creates a request.\n     *\n     * @param {String} method\n     * @private\n     */\n    request(opts = {}) {\n        Object.assign(opts, { xd: this.xd, cookieJar: this.cookieJar }, this.opts);\n        return new Request(this.uri(), opts);\n    }\n    /**\n     * Sends data.\n     *\n     * @param {String} data to send.\n     * @param {Function} called upon flush.\n     * @private\n     */\n    doWrite(data, fn) {\n        const req = this.request({\n            method: \"POST\",\n            data: data,\n        });\n        req.on(\"success\", fn);\n        req.on(\"error\", (xhrStatus, context) => {\n            this.onError(\"xhr post error\", xhrStatus, context);\n        });\n    }\n    /**\n     * Starts a poll cycle.\n     *\n     * @private\n     */\n    doPoll() {\n        const req = this.request();\n        req.on(\"data\", this.onData.bind(this));\n        req.on(\"error\", (xhrStatus, context) => {\n            this.onError(\"xhr poll error\", xhrStatus, context);\n        });\n        this.pollXhr = req;\n    }\n}\nexport class Request extends Emitter {\n    /**\n     * Request constructor\n     *\n     * @param {Object} options\n     * @package\n     */\n    constructor(uri, opts) {\n        super();\n        installTimerFunctions(this, opts);\n        this.opts = opts;\n        this.method = opts.method || \"GET\";\n        this.uri = uri;\n        this.data = undefined !== opts.data ? opts.data : null;\n        this.create();\n    }\n    /**\n     * Creates the XHR object and sends the request.\n     *\n     * @private\n     */\n    create() {\n        var _a;\n        const opts = pick(this.opts, \"agent\", \"pfx\", \"key\", \"passphrase\", \"cert\", \"ca\", \"ciphers\", \"rejectUnauthorized\", \"autoUnref\");\n        opts.xdomain = !!this.opts.xd;\n        const xhr = (this.xhr = new XMLHttpRequest(opts));\n        try {\n            xhr.open(this.method, this.uri, true);\n            try {\n                if (this.opts.extraHeaders) {\n                    xhr.setDisableHeaderCheck && xhr.setDisableHeaderCheck(true);\n                    for (let i in this.opts.extraHeaders) {\n                        if (this.opts.extraHeaders.hasOwnProperty(i)) {\n                            xhr.setRequestHeader(i, this.opts.extraHeaders[i]);\n                        }\n                    }\n                }\n            }\n            catch (e) { }\n            if (\"POST\" === this.method) {\n                try {\n                    xhr.setRequestHeader(\"Content-type\", \"text/plain;charset=UTF-8\");\n                }\n                catch (e) { }\n            }\n            try {\n                xhr.setRequestHeader(\"Accept\", \"*/*\");\n            }\n            catch (e) { }\n            (_a = this.opts.cookieJar) === null || _a === void 0 ? void 0 : _a.addCookies(xhr);\n            // ie6 check\n            if (\"withCredentials\" in xhr) {\n                xhr.withCredentials = this.opts.withCredentials;\n            }\n            if (this.opts.requestTimeout) {\n                xhr.timeout = this.opts.requestTimeout;\n            }\n            xhr.onreadystatechange = () => {\n                var _a;\n                if (xhr.readyState === 3) {\n                    (_a = this.opts.cookieJar) === null || _a === void 0 ? void 0 : _a.parseCookies(xhr);\n                }\n                if (4 !== xhr.readyState)\n                    return;\n                if (200 === xhr.status || 1223 === xhr.status) {\n                    this.onLoad();\n                }\n                else {\n                    // make sure the `error` event handler that's user-set\n                    // does not throw in the same tick and gets caught here\n                    this.setTimeoutFn(() => {\n                        this.onError(typeof xhr.status === \"number\" ? xhr.status : 0);\n                    }, 0);\n                }\n            };\n            xhr.send(this.data);\n        }\n        catch (e) {\n            // Need to defer since .create() is called directly from the constructor\n            // and thus the 'error' event can only be only bound *after* this exception\n            // occurs.  Therefore, also, we cannot throw here at all.\n            this.setTimeoutFn(() => {\n                this.onError(e);\n            }, 0);\n            return;\n        }\n        if (typeof document !== \"undefined\") {\n            this.index = Request.requestsCount++;\n            Request.requests[this.index] = this;\n        }\n    }\n    /**\n     * Called upon error.\n     *\n     * @private\n     */\n    onError(err) {\n        this.emitReserved(\"error\", err, this.xhr);\n        this.cleanup(true);\n    }\n    /**\n     * Cleans up house.\n     *\n     * @private\n     */\n    cleanup(fromError) {\n        if (\"undefined\" === typeof this.xhr || null === this.xhr) {\n            return;\n        }\n        this.xhr.onreadystatechange = empty;\n        if (fromError) {\n            try {\n                this.xhr.abort();\n            }\n            catch (e) { }\n        }\n        if (typeof document !== \"undefined\") {\n            delete Request.requests[this.index];\n        }\n        this.xhr = null;\n    }\n    /**\n     * Called upon load.\n     *\n     * @private\n     */\n    onLoad() {\n        const data = this.xhr.responseText;\n        if (data !== null) {\n            this.emitReserved(\"data\", data);\n            this.emitReserved(\"success\");\n            this.cleanup();\n        }\n    }\n    /**\n     * Aborts the request.\n     *\n     * @package\n     */\n    abort() {\n        this.cleanup();\n    }\n}\nRequest.requestsCount = 0;\nRequest.requests = {};\n/**\n * Aborts pending requests when unloading the window. This is needed to prevent\n * memory leaks (e.g. when using IE) and to ensure that no spurious error is\n * emitted.\n */\nif (typeof document !== \"undefined\") {\n    // @ts-ignore\n    if (typeof attachEvent === \"function\") {\n        // @ts-ignore\n        attachEvent(\"onunload\", unloadHandler);\n    }\n    else if (typeof addEventListener === \"function\") {\n        const terminationEvent = \"onpagehide\" in globalThis ? \"pagehide\" : \"unload\";\n        addEventListener(terminationEvent, unloadHandler, false);\n    }\n}\nfunction unloadHandler() {\n    for (let i in Request.requests) {\n        if (Request.requests.hasOwnProperty(i)) {\n            Request.requests[i].abort();\n        }\n    }\n}\n","import { globalThisShim as globalThis } from \"../globalThis.js\";\nexport const nextTick = (() => {\n    const isPromiseAvailable = typeof Promise === \"function\" && typeof Promise.resolve === \"function\";\n    if (isPromiseAvailable) {\n        return (cb) => Promise.resolve().then(cb);\n    }\n    else {\n        return (cb, setTimeoutFn) => setTimeoutFn(cb, 0);\n    }\n})();\nexport const WebSocket = globalThis.WebSocket || globalThis.MozWebSocket;\nexport const usingBrowserWebSocket = true;\nexport const defaultBinaryType = \"arraybuffer\";\n","import { Transport } from \"../transport.js\";\nimport { yeast } from \"../contrib/yeast.js\";\nimport { pick } from \"../util.js\";\nimport { defaultBinaryType, nextTick, usingBrowserWebSocket, WebSocket, } from \"./websocket-constructor.js\";\nimport { encodePacket } from \"engine.io-parser\";\n// detect ReactNative environment\nconst isReactNative = typeof navigator !== \"undefined\" &&\n    typeof navigator.product === \"string\" &&\n    navigator.product.toLowerCase() === \"reactnative\";\nexport class WS extends Transport {\n    /**\n     * WebSocket transport constructor.\n     *\n     * @param {Object} opts - connection options\n     * @protected\n     */\n    constructor(opts) {\n        super(opts);\n        this.supportsBinary = !opts.forceBase64;\n    }\n    get name() {\n        return \"websocket\";\n    }\n    doOpen() {\n        if (!this.check()) {\n            // let probe timeout\n            return;\n        }\n        const uri = this.uri();\n        const protocols = this.opts.protocols;\n        // React Native only supports the 'headers' option, and will print a warning if anything else is passed\n        const opts = isReactNative\n            ? {}\n            : pick(this.opts, \"agent\", \"perMessageDeflate\", \"pfx\", \"key\", \"passphrase\", \"cert\", \"ca\", \"ciphers\", \"rejectUnauthorized\", \"localAddress\", \"protocolVersion\", \"origin\", \"maxPayload\", \"family\", \"checkServerIdentity\");\n        if (this.opts.extraHeaders) {\n            opts.headers = this.opts.extraHeaders;\n        }\n        try {\n            this.ws =\n                usingBrowserWebSocket && !isReactNative\n                    ? protocols\n                        ? new WebSocket(uri, protocols)\n                        : new WebSocket(uri)\n                    : new WebSocket(uri, protocols, opts);\n        }\n        catch (err) {\n            return this.emitReserved(\"error\", err);\n        }\n        this.ws.binaryType = this.socket.binaryType || defaultBinaryType;\n        this.addEventListeners();\n    }\n    /**\n     * Adds event listeners to the socket\n     *\n     * @private\n     */\n    addEventListeners() {\n        this.ws.onopen = () => {\n            if (this.opts.autoUnref) {\n                this.ws._socket.unref();\n            }\n            this.onOpen();\n        };\n        this.ws.onclose = (closeEvent) => this.onClose({\n            description: \"websocket connection closed\",\n            context: closeEvent,\n        });\n        this.ws.onmessage = (ev) => this.onData(ev.data);\n        this.ws.onerror = (e) => this.onError(\"websocket error\", e);\n    }\n    write(packets) {\n        this.writable = false;\n        // encodePacket efficient as it uses WS framing\n        // no need for encodePayload\n        for (let i = 0; i < packets.length; i++) {\n            const packet = packets[i];\n            const lastPacket = i === packets.length - 1;\n            encodePacket(packet, this.supportsBinary, (data) => {\n                // always create a new object (GH-437)\n                const opts = {};\n                if (!usingBrowserWebSocket) {\n                    if (packet.options) {\n                        opts.compress = packet.options.compress;\n                    }\n                    if (this.opts.perMessageDeflate) {\n                        const len = \n                        // @ts-ignore\n                        \"string\" === typeof data ? Buffer.byteLength(data) : data.length;\n                        if (len < this.opts.perMessageDeflate.threshold) {\n                            opts.compress = false;\n                        }\n                    }\n                }\n                // Sometimes the websocket has already been closed but the browser didn't\n                // have a chance of informing us about it yet, in that case send will\n                // throw an error\n                try {\n                    if (usingBrowserWebSocket) {\n                        // TypeError is thrown when passing the second argument on Safari\n                        this.ws.send(data);\n                    }\n                    else {\n                        this.ws.send(data, opts);\n                    }\n                }\n                catch (e) {\n                }\n                if (lastPacket) {\n                    // fake drain\n                    // defer to next tick to allow Socket to clear writeBuffer\n                    nextTick(() => {\n                        this.writable = true;\n                        this.emitReserved(\"drain\");\n                    }, this.setTimeoutFn);\n                }\n            });\n        }\n    }\n    doClose() {\n        if (typeof this.ws !== \"undefined\") {\n            this.ws.close();\n            this.ws = null;\n        }\n    }\n    /**\n     * Generates uri for connection.\n     *\n     * @private\n     */\n    uri() {\n        const schema = this.opts.secure ? \"wss\" : \"ws\";\n        const query = this.query || {};\n        // append timestamp to URI\n        if (this.opts.timestampRequests) {\n            query[this.opts.timestampParam] = yeast();\n        }\n        // communicate binary support capabilities\n        if (!this.supportsBinary) {\n            query.b64 = 1;\n        }\n        return this.createUri(schema, query);\n    }\n    /**\n     * Feature detection for WebSocket.\n     *\n     * @return {Boolean} whether this transport is available.\n     * @private\n     */\n    check() {\n        return !!WebSocket;\n    }\n}\n","import { Transport } from \"../transport.js\";\nimport { nextTick } from \"./websocket-constructor.js\";\nimport { encodePacketToBinary, decodePacketFromBinary, } from \"engine.io-parser\";\nfunction shouldIncludeBinaryHeader(packet, encoded) {\n    // 48 === \"0\".charCodeAt(0) (OPEN packet type)\n    // 54 === \"6\".charCodeAt(0) (NOOP packet type)\n    return (packet.type === \"message\" &&\n        typeof packet.data !== \"string\" &&\n        encoded[0] >= 48 &&\n        encoded[0] <= 54);\n}\nexport class WT extends Transport {\n    get name() {\n        return \"webtransport\";\n    }\n    doOpen() {\n        // @ts-ignore\n        if (typeof WebTransport !== \"function\") {\n            return;\n        }\n        // @ts-ignore\n        this.transport = new WebTransport(this.createUri(\"https\"), this.opts.transportOptions[this.name]);\n        this.transport.closed\n            .then(() => {\n            this.onClose();\n        })\n            .catch((err) => {\n            this.onError(\"webtransport error\", err);\n        });\n        // note: we could have used async/await, but that would require some additional polyfills\n        this.transport.ready.then(() => {\n            this.transport.createBidirectionalStream().then((stream) => {\n                const reader = stream.readable.getReader();\n                this.writer = stream.writable.getWriter();\n                let binaryFlag;\n                const read = () => {\n                    reader\n                        .read()\n                        .then(({ done, value }) => {\n                        if (done) {\n                            return;\n                        }\n                        if (!binaryFlag && value.byteLength === 1 && value[0] === 54) {\n                            binaryFlag = true;\n                        }\n                        else {\n                            // TODO expose binarytype\n                            this.onPacket(decodePacketFromBinary(value, binaryFlag, \"arraybuffer\"));\n                            binaryFlag = false;\n                        }\n                        read();\n                    })\n                        .catch((err) => {\n                    });\n                };\n                read();\n                const handshake = this.query.sid ? `0{\"sid\":\"${this.query.sid}\"}` : \"0\";\n                this.writer\n                    .write(new TextEncoder().encode(handshake))\n                    .then(() => this.onOpen());\n            });\n        });\n    }\n    write(packets) {\n        this.writable = false;\n        for (let i = 0; i < packets.length; i++) {\n            const packet = packets[i];\n            const lastPacket = i === packets.length - 1;\n            encodePacketToBinary(packet, (data) => {\n                if (shouldIncludeBinaryHeader(packet, data)) {\n                    this.writer.write(Uint8Array.of(54));\n                }\n                this.writer.write(data).then(() => {\n                    if (lastPacket) {\n                        nextTick(() => {\n                            this.writable = true;\n                            this.emitReserved(\"drain\");\n                        }, this.setTimeoutFn);\n                    }\n                });\n            });\n        }\n    }\n    doClose() {\n        var _a;\n        (_a = this.transport) === null || _a === void 0 ? void 0 : _a.close();\n    }\n}\n","import { Polling } from \"./polling.js\";\nimport { WS } from \"./websocket.js\";\nimport { WT } from \"./webtransport.js\";\nexport const transports = {\n    websocket: WS,\n    webtransport: WT,\n    polling: Polling,\n};\n","// imported from https://github.com/galkn/parseuri\n/**\n * Parses a URI\n *\n * Note: we could also have used the built-in URL object, but it isn't supported on all platforms.\n *\n * See:\n * - https://developer.mozilla.org/en-US/docs/Web/API/URL\n * - https://caniuse.com/url\n * - https://www.rfc-editor.org/rfc/rfc3986#appendix-B\n *\n * History of the parse() method:\n * - first commit: https://github.com/socketio/socket.io-client/commit/4ee1d5d94b3906a9c052b459f1a818b15f38f91c\n * - export into its own module: https://github.com/socketio/engine.io-client/commit/de2c561e4564efeb78f1bdb1ba39ef81b2822cb3\n * - reimport: https://github.com/socketio/engine.io-client/commit/df32277c3f6d622eec5ed09f493cae3f3391d242\n *\n * @author Steven Levithan <stevenlevithan.com> (MIT license)\n * @api private\n */\nconst re = /^(?:(?![^:@\\/?#]+:[^:@\\/]*@)(http|https|ws|wss):\\/\\/)?((?:(([^:@\\/?#]*)(?::([^:@\\/?#]*))?)?@)?((?:[a-f0-9]{0,4}:){2,7}[a-f0-9]{0,4}|[^:\\/?#]*)(?::(\\d*))?)(((\\/(?:[^?#](?![^?#\\/]*\\.[^?#\\/.]+(?:[?#]|$)))*\\/?)?([^?#\\/]*))(?:\\?([^#]*))?(?:#(.*))?)/;\nconst parts = [\n    'source', 'protocol', 'authority', 'userInfo', 'user', 'password', 'host', 'port', 'relative', 'path', 'directory', 'file', 'query', 'anchor'\n];\nexport function parse(str) {\n    const src = str, b = str.indexOf('['), e = str.indexOf(']');\n    if (b != -1 && e != -1) {\n        str = str.substring(0, b) + str.substring(b, e).replace(/:/g, ';') + str.substring(e, str.length);\n    }\n    let m = re.exec(str || ''), uri = {}, i = 14;\n    while (i--) {\n        uri[parts[i]] = m[i] || '';\n    }\n    if (b != -1 && e != -1) {\n        uri.source = src;\n        uri.host = uri.host.substring(1, uri.host.length - 1).replace(/;/g, ':');\n        uri.authority = uri.authority.replace('[', '').replace(']', '').replace(/;/g, ':');\n        uri.ipv6uri = true;\n    }\n    uri.pathNames = pathNames(uri, uri['path']);\n    uri.queryKey = queryKey(uri, uri['query']);\n    return uri;\n}\nfunction pathNames(obj, path) {\n    const regx = /\\/{2,9}/g, names = path.replace(regx, \"/\").split(\"/\");\n    if (path.slice(0, 1) == '/' || path.length === 0) {\n        names.splice(0, 1);\n    }\n    if (path.slice(-1) == '/') {\n        names.splice(names.length - 1, 1);\n    }\n    return names;\n}\nfunction queryKey(uri, query) {\n    const data = {};\n    query.replace(/(?:^|&)([^&=]*)=?([^&]*)/g, function ($0, $1, $2) {\n        if ($1) {\n            data[$1] = $2;\n        }\n    });\n    return data;\n}\n","import { transports } from \"./transports/index.js\";\nimport { installTimerFunctions, byteLength } from \"./util.js\";\nimport { decode } from \"./contrib/parseqs.js\";\nimport { parse } from \"./contrib/parseuri.js\";\nimport { Emitter } from \"@socket.io/component-emitter\";\nimport { protocol } from \"engine.io-parser\";\nexport class Socket extends Emitter {\n    /**\n     * Socket constructor.\n     *\n     * @param {String|Object} uri - uri or options\n     * @param {Object} opts - options\n     */\n    constructor(uri, opts = {}) {\n        super();\n        this.writeBuffer = [];\n        if (uri && \"object\" === typeof uri) {\n            opts = uri;\n            uri = null;\n        }\n        if (uri) {\n            uri = parse(uri);\n            opts.hostname = uri.host;\n            opts.secure = uri.protocol === \"https\" || uri.protocol === \"wss\";\n            opts.port = uri.port;\n            if (uri.query)\n                opts.query = uri.query;\n        }\n        else if (opts.host) {\n            opts.hostname = parse(opts.host).host;\n        }\n        installTimerFunctions(this, opts);\n        this.secure =\n            null != opts.secure\n                ? opts.secure\n                : typeof location !== \"undefined\" && \"https:\" === location.protocol;\n        if (opts.hostname && !opts.port) {\n            // if no port is specified manually, use the protocol default\n            opts.port = this.secure ? \"443\" : \"80\";\n        }\n        this.hostname =\n            opts.hostname ||\n                (typeof location !== \"undefined\" ? location.hostname : \"localhost\");\n        this.port =\n            opts.port ||\n                (typeof location !== \"undefined\" && location.port\n                    ? location.port\n                    : this.secure\n                        ? \"443\"\n                        : \"80\");\n        this.transports = opts.transports || [\n            \"polling\",\n            \"websocket\",\n            \"webtransport\",\n        ];\n        this.writeBuffer = [];\n        this.prevBufferLen = 0;\n        this.opts = Object.assign({\n            path: \"/engine.io\",\n            agent: false,\n            withCredentials: false,\n            upgrade: true,\n            timestampParam: \"t\",\n            rememberUpgrade: false,\n            addTrailingSlash: true,\n            rejectUnauthorized: true,\n            perMessageDeflate: {\n                threshold: 1024,\n            },\n            transportOptions: {},\n            closeOnBeforeunload: false,\n        }, opts);\n        this.opts.path =\n            this.opts.path.replace(/\\/$/, \"\") +\n                (this.opts.addTrailingSlash ? \"/\" : \"\");\n        if (typeof this.opts.query === \"string\") {\n            this.opts.query = decode(this.opts.query);\n        }\n        // set on handshake\n        this.id = null;\n        this.upgrades = null;\n        this.pingInterval = null;\n        this.pingTimeout = null;\n        // set on heartbeat\n        this.pingTimeoutTimer = null;\n        if (typeof addEventListener === \"function\") {\n            if (this.opts.closeOnBeforeunload) {\n                // Firefox closes the connection when the \"beforeunload\" event is emitted but not Chrome. This event listener\n                // ensures every browser behaves the same (no \"disconnect\" event at the Socket.IO level when the page is\n                // closed/reloaded)\n                this.beforeunloadEventListener = () => {\n                    if (this.transport) {\n                        // silently close the transport\n                        this.transport.removeAllListeners();\n                        this.transport.close();\n                    }\n                };\n                addEventListener(\"beforeunload\", this.beforeunloadEventListener, false);\n            }\n            if (this.hostname !== \"localhost\") {\n                this.offlineEventListener = () => {\n                    this.onClose(\"transport close\", {\n                        description: \"network connection lost\",\n                    });\n                };\n                addEventListener(\"offline\", this.offlineEventListener, false);\n            }\n        }\n        this.open();\n    }\n    /**\n     * Creates transport of the given type.\n     *\n     * @param {String} name - transport name\n     * @return {Transport}\n     * @private\n     */\n    createTransport(name) {\n        const query = Object.assign({}, this.opts.query);\n        // append engine.io protocol identifier\n        query.EIO = protocol;\n        // transport name\n        query.transport = name;\n        // session id if we already have one\n        if (this.id)\n            query.sid = this.id;\n        const opts = Object.assign({}, this.opts, {\n            query,\n            socket: this,\n            hostname: this.hostname,\n            secure: this.secure,\n            port: this.port,\n        }, this.opts.transportOptions[name]);\n        return new transports[name](opts);\n    }\n    /**\n     * Initializes transport to use and starts probe.\n     *\n     * @private\n     */\n    open() {\n        let transport;\n        if (this.opts.rememberUpgrade &&\n            Socket.priorWebsocketSuccess &&\n            this.transports.indexOf(\"websocket\") !== -1) {\n            transport = \"websocket\";\n        }\n        else if (0 === this.transports.length) {\n            // Emit error on next tick so it can be listened to\n            this.setTimeoutFn(() => {\n                this.emitReserved(\"error\", \"No transports available\");\n            }, 0);\n            return;\n        }\n        else {\n            transport = this.transports[0];\n        }\n        this.readyState = \"opening\";\n        // Retry with the next transport if the transport is disabled (jsonp: false)\n        try {\n            transport = this.createTransport(transport);\n        }\n        catch (e) {\n            this.transports.shift();\n            this.open();\n            return;\n        }\n        transport.open();\n        this.setTransport(transport);\n    }\n    /**\n     * Sets the current transport. Disables the existing one (if any).\n     *\n     * @private\n     */\n    setTransport(transport) {\n        if (this.transport) {\n            this.transport.removeAllListeners();\n        }\n        // set up transport\n        this.transport = transport;\n        // set up transport listeners\n        transport\n            .on(\"drain\", this.onDrain.bind(this))\n            .on(\"packet\", this.onPacket.bind(this))\n            .on(\"error\", this.onError.bind(this))\n            .on(\"close\", (reason) => this.onClose(\"transport close\", reason));\n    }\n    /**\n     * Probes a transport.\n     *\n     * @param {String} name - transport name\n     * @private\n     */\n    probe(name) {\n        let transport = this.createTransport(name);\n        let failed = false;\n        Socket.priorWebsocketSuccess = false;\n        const onTransportOpen = () => {\n            if (failed)\n                return;\n            transport.send([{ type: \"ping\", data: \"probe\" }]);\n            transport.once(\"packet\", (msg) => {\n                if (failed)\n                    return;\n                if (\"pong\" === msg.type && \"probe\" === msg.data) {\n                    this.upgrading = true;\n                    this.emitReserved(\"upgrading\", transport);\n                    if (!transport)\n                        return;\n                    Socket.priorWebsocketSuccess = \"websocket\" === transport.name;\n                    this.transport.pause(() => {\n                        if (failed)\n                            return;\n                        if (\"closed\" === this.readyState)\n                            return;\n                        cleanup();\n                        this.setTransport(transport);\n                        transport.send([{ type: \"upgrade\" }]);\n                        this.emitReserved(\"upgrade\", transport);\n                        transport = null;\n                        this.upgrading = false;\n                        this.flush();\n                    });\n                }\n                else {\n                    const err = new Error(\"probe error\");\n                    // @ts-ignore\n                    err.transport = transport.name;\n                    this.emitReserved(\"upgradeError\", err);\n                }\n            });\n        };\n        function freezeTransport() {\n            if (failed)\n                return;\n            // Any callback called by transport should be ignored since now\n            failed = true;\n            cleanup();\n            transport.close();\n            transport = null;\n        }\n        // Handle any error that happens while probing\n        const onerror = (err) => {\n            const error = new Error(\"probe error: \" + err);\n            // @ts-ignore\n            error.transport = transport.name;\n            freezeTransport();\n            this.emitReserved(\"upgradeError\", error);\n        };\n        function onTransportClose() {\n            onerror(\"transport closed\");\n        }\n        // When the socket is closed while we're probing\n        function onclose() {\n            onerror(\"socket closed\");\n        }\n        // When the socket is upgraded while we're probing\n        function onupgrade(to) {\n            if (transport && to.name !== transport.name) {\n                freezeTransport();\n            }\n        }\n        // Remove all listeners on the transport and on self\n        const cleanup = () => {\n            transport.removeListener(\"open\", onTransportOpen);\n            transport.removeListener(\"error\", onerror);\n            transport.removeListener(\"close\", onTransportClose);\n            this.off(\"close\", onclose);\n            this.off(\"upgrading\", onupgrade);\n        };\n        transport.once(\"open\", onTransportOpen);\n        transport.once(\"error\", onerror);\n        transport.once(\"close\", onTransportClose);\n        this.once(\"close\", onclose);\n        this.once(\"upgrading\", onupgrade);\n        if (this.upgrades.indexOf(\"webtransport\") !== -1 &&\n            name !== \"webtransport\") {\n            // favor WebTransport\n            this.setTimeoutFn(() => {\n                if (!failed) {\n                    transport.open();\n                }\n            }, 200);\n        }\n        else {\n            transport.open();\n        }\n    }\n    /**\n     * Called when connection is deemed open.\n     *\n     * @private\n     */\n    onOpen() {\n        this.readyState = \"open\";\n        Socket.priorWebsocketSuccess = \"websocket\" === this.transport.name;\n        this.emitReserved(\"open\");\n        this.flush();\n        // we check for `readyState` in case an `open`\n        // listener already closed the socket\n        if (\"open\" === this.readyState && this.opts.upgrade) {\n            let i = 0;\n            const l = this.upgrades.length;\n            for (; i < l; i++) {\n                this.probe(this.upgrades[i]);\n            }\n        }\n    }\n    /**\n     * Handles a packet.\n     *\n     * @private\n     */\n    onPacket(packet) {\n        if (\"opening\" === this.readyState ||\n            \"open\" === this.readyState ||\n            \"closing\" === this.readyState) {\n            this.emitReserved(\"packet\", packet);\n            // Socket is live - any packet counts\n            this.emitReserved(\"heartbeat\");\n            switch (packet.type) {\n                case \"open\":\n                    this.onHandshake(JSON.parse(packet.data));\n                    break;\n                case \"ping\":\n                    this.resetPingTimeout();\n                    this.sendPacket(\"pong\");\n                    this.emitReserved(\"ping\");\n                    this.emitReserved(\"pong\");\n                    break;\n                case \"error\":\n                    const err = new Error(\"server error\");\n                    // @ts-ignore\n                    err.code = packet.data;\n                    this.onError(err);\n                    break;\n                case \"message\":\n                    this.emitReserved(\"data\", packet.data);\n                    this.emitReserved(\"message\", packet.data);\n                    break;\n            }\n        }\n        else {\n        }\n    }\n    /**\n     * Called upon handshake completion.\n     *\n     * @param {Object} data - handshake obj\n     * @private\n     */\n    onHandshake(data) {\n        this.emitReserved(\"handshake\", data);\n        this.id = data.sid;\n        this.transport.query.sid = data.sid;\n        this.upgrades = this.filterUpgrades(data.upgrades);\n        this.pingInterval = data.pingInterval;\n        this.pingTimeout = data.pingTimeout;\n        this.maxPayload = data.maxPayload;\n        this.onOpen();\n        // In case open handler closes socket\n        if (\"closed\" === this.readyState)\n            return;\n        this.resetPingTimeout();\n    }\n    /**\n     * Sets and resets ping timeout timer based on server pings.\n     *\n     * @private\n     */\n    resetPingTimeout() {\n        this.clearTimeoutFn(this.pingTimeoutTimer);\n        this.pingTimeoutTimer = this.setTimeoutFn(() => {\n            this.onClose(\"ping timeout\");\n        }, this.pingInterval + this.pingTimeout);\n        if (this.opts.autoUnref) {\n            this.pingTimeoutTimer.unref();\n        }\n    }\n    /**\n     * Called on `drain` event\n     *\n     * @private\n     */\n    onDrain() {\n        this.writeBuffer.splice(0, this.prevBufferLen);\n        // setting prevBufferLen = 0 is very important\n        // for example, when upgrading, upgrade packet is sent over,\n        // and a nonzero prevBufferLen could cause problems on `drain`\n        this.prevBufferLen = 0;\n        if (0 === this.writeBuffer.length) {\n            this.emitReserved(\"drain\");\n        }\n        else {\n            this.flush();\n        }\n    }\n    /**\n     * Flush write buffers.\n     *\n     * @private\n     */\n    flush() {\n        if (\"closed\" !== this.readyState &&\n            this.transport.writable &&\n            !this.upgrading &&\n            this.writeBuffer.length) {\n            const packets = this.getWritablePackets();\n            this.transport.send(packets);\n            // keep track of current length of writeBuffer\n            // splice writeBuffer and callbackBuffer on `drain`\n            this.prevBufferLen = packets.length;\n            this.emitReserved(\"flush\");\n        }\n    }\n    /**\n     * Ensure the encoded size of the writeBuffer is below the maxPayload value sent by the server (only for HTTP\n     * long-polling)\n     *\n     * @private\n     */\n    getWritablePackets() {\n        const shouldCheckPayloadSize = this.maxPayload &&\n            this.transport.name === \"polling\" &&\n            this.writeBuffer.length > 1;\n        if (!shouldCheckPayloadSize) {\n            return this.writeBuffer;\n        }\n        let payloadSize = 1; // first packet type\n        for (let i = 0; i < this.writeBuffer.length; i++) {\n            const data = this.writeBuffer[i].data;\n            if (data) {\n                payloadSize += byteLength(data);\n            }\n            if (i > 0 && payloadSize > this.maxPayload) {\n                return this.writeBuffer.slice(0, i);\n            }\n            payloadSize += 2; // separator + packet type\n        }\n        return this.writeBuffer;\n    }\n    /**\n     * Sends a message.\n     *\n     * @param {String} msg - message.\n     * @param {Object} options.\n     * @param {Function} callback function.\n     * @return {Socket} for chaining.\n     */\n    write(msg, options, fn) {\n        this.sendPacket(\"message\", msg, options, fn);\n        return this;\n    }\n    send(msg, options, fn) {\n        this.sendPacket(\"message\", msg, options, fn);\n        return this;\n    }\n    /**\n     * Sends a packet.\n     *\n     * @param {String} type: packet type.\n     * @param {String} data.\n     * @param {Object} options.\n     * @param {Function} fn - callback function.\n     * @private\n     */\n    sendPacket(type, data, options, fn) {\n        if (\"function\" === typeof data) {\n            fn = data;\n            data = undefined;\n        }\n        if (\"function\" === typeof options) {\n            fn = options;\n            options = null;\n        }\n        if (\"closing\" === this.readyState || \"closed\" === this.readyState) {\n            return;\n        }\n        options = options || {};\n        options.compress = false !== options.compress;\n        const packet = {\n            type: type,\n            data: data,\n            options: options,\n        };\n        this.emitReserved(\"packetCreate\", packet);\n        this.writeBuffer.push(packet);\n        if (fn)\n            this.once(\"flush\", fn);\n        this.flush();\n    }\n    /**\n     * Closes the connection.\n     */\n    close() {\n        const close = () => {\n            this.onClose(\"forced close\");\n            this.transport.close();\n        };\n        const cleanupAndClose = () => {\n            this.off(\"upgrade\", cleanupAndClose);\n            this.off(\"upgradeError\", cleanupAndClose);\n            close();\n        };\n        const waitForUpgrade = () => {\n            // wait for upgrade to finish since we can't send packets while pausing a transport\n            this.once(\"upgrade\", cleanupAndClose);\n            this.once(\"upgradeError\", cleanupAndClose);\n        };\n        if (\"opening\" === this.readyState || \"open\" === this.readyState) {\n            this.readyState = \"closing\";\n            if (this.writeBuffer.length) {\n                this.once(\"drain\", () => {\n                    if (this.upgrading) {\n                        waitForUpgrade();\n                    }\n                    else {\n                        close();\n                    }\n                });\n            }\n            else if (this.upgrading) {\n                waitForUpgrade();\n            }\n            else {\n                close();\n            }\n        }\n        return this;\n    }\n    /**\n     * Called upon transport error\n     *\n     * @private\n     */\n    onError(err) {\n        Socket.priorWebsocketSuccess = false;\n        this.emitReserved(\"error\", err);\n        this.onClose(\"transport error\", err);\n    }\n    /**\n     * Called upon transport close.\n     *\n     * @private\n     */\n    onClose(reason, description) {\n        if (\"opening\" === this.readyState ||\n            \"open\" === this.readyState ||\n            \"closing\" === this.readyState) {\n            // clear timers\n            this.clearTimeoutFn(this.pingTimeoutTimer);\n            // stop event from firing again for transport\n            this.transport.removeAllListeners(\"close\");\n            // ensure transport won't stay open\n            this.transport.close();\n            // ignore further transport communication\n            this.transport.removeAllListeners();\n            if (typeof removeEventListener === \"function\") {\n                removeEventListener(\"beforeunload\", this.beforeunloadEventListener, false);\n                removeEventListener(\"offline\", this.offlineEventListener, false);\n            }\n            // set ready state\n            this.readyState = \"closed\";\n            // clear session id\n            this.id = null;\n            // emit close event\n            this.emitReserved(\"close\", reason, description);\n            // clean buffers after, so users can still\n            // grab the buffers on `close` event\n            this.writeBuffer = [];\n            this.prevBufferLen = 0;\n        }\n    }\n    /**\n     * Filters upgrades, returning only those matching client transports.\n     *\n     * @param {Array} upgrades - server upgrades\n     * @private\n     */\n    filterUpgrades(upgrades) {\n        const filteredUpgrades = [];\n        let i = 0;\n        const j = upgrades.length;\n        for (; i < j; i++) {\n            if (~this.transports.indexOf(upgrades[i]))\n                filteredUpgrades.push(upgrades[i]);\n        }\n        return filteredUpgrades;\n    }\n}\nSocket.protocol = protocol;\n","import { Socket } from \"./socket.js\";\nexport { Socket };\nexport const protocol = Socket.protocol;\nexport { Transport } from \"./transport.js\";\nexport { transports } from \"./transports/index.js\";\nexport { installTimerFunctions } from \"./util.js\";\nexport { parse } from \"./contrib/parseuri.js\";\nexport { nextTick } from \"./transports/websocket-constructor.js\";\n","const withNativeArrayBuffer = typeof ArrayBuffer === \"function\";\nconst isView = (obj) => {\n    return typeof ArrayBuffer.isView === \"function\"\n        ? ArrayBuffer.isView(obj)\n        : obj.buffer instanceof ArrayBuffer;\n};\nconst toString = Object.prototype.toString;\nconst withNativeBlob = typeof Blob === \"function\" ||\n    (typeof Blob !== \"undefined\" &&\n        toString.call(Blob) === \"[object BlobConstructor]\");\nconst withNativeFile = typeof File === \"function\" ||\n    (typeof File !== \"undefined\" &&\n        toString.call(File) === \"[object FileConstructor]\");\n/**\n * Returns true if obj is a Buffer, an ArrayBuffer, a Blob or a File.\n *\n * @private\n */\nexport function isBinary(obj) {\n    return ((withNativeArrayBuffer && (obj instanceof ArrayBuffer || isView(obj))) ||\n        (withNativeBlob && obj instanceof Blob) ||\n        (withNativeFile && obj instanceof File));\n}\nexport function hasBinary(obj, toJSON) {\n    if (!obj || typeof obj !== \"object\") {\n        return false;\n    }\n    if (Array.isArray(obj)) {\n        for (let i = 0, l = obj.length; i < l; i++) {\n            if (hasBinary(obj[i])) {\n                return true;\n            }\n        }\n        return false;\n    }\n    if (isBinary(obj)) {\n        return true;\n    }\n    if (obj.toJSON &&\n        typeof obj.toJSON === \"function\" &&\n        arguments.length === 1) {\n        return hasBinary(obj.toJSON(), true);\n    }\n    for (const key in obj) {\n        if (Object.prototype.hasOwnProperty.call(obj, key) && hasBinary(obj[key])) {\n            return true;\n        }\n    }\n    return false;\n}\n","import { isBinary } from \"./is-binary.js\";\n/**\n * Replaces every Buffer | ArrayBuffer | Blob | File in packet with a numbered placeholder.\n *\n * @param {Object} packet - socket.io event packet\n * @return {Object} with deconstructed packet and list of buffers\n * @public\n */\nexport function deconstructPacket(packet) {\n    const buffers = [];\n    const packetData = packet.data;\n    const pack = packet;\n    pack.data = _deconstructPacket(packetData, buffers);\n    pack.attachments = buffers.length; // number of binary 'attachments'\n    return { packet: pack, buffers: buffers };\n}\nfunction _deconstructPacket(data, buffers) {\n    if (!data)\n        return data;\n    if (isBinary(data)) {\n        const placeholder = { _placeholder: true, num: buffers.length };\n        buffers.push(data);\n        return placeholder;\n    }\n    else if (Array.isArray(data)) {\n        const newData = new Array(data.length);\n        for (let i = 0; i < data.length; i++) {\n            newData[i] = _deconstructPacket(data[i], buffers);\n        }\n        return newData;\n    }\n    else if (typeof data === \"object\" && !(data instanceof Date)) {\n        const newData = {};\n        for (const key in data) {\n            if (Object.prototype.hasOwnProperty.call(data, key)) {\n                newData[key] = _deconstructPacket(data[key], buffers);\n            }\n        }\n        return newData;\n    }\n    return data;\n}\n/**\n * Reconstructs a binary packet from its placeholder packet and buffers\n *\n * @param {Object} packet - event packet with placeholders\n * @param {Array} buffers - binary buffers to put in placeholder positions\n * @return {Object} reconstructed packet\n * @public\n */\nexport function reconstructPacket(packet, buffers) {\n    packet.data = _reconstructPacket(packet.data, buffers);\n    delete packet.attachments; // no longer useful\n    return packet;\n}\nfunction _reconstructPacket(data, buffers) {\n    if (!data)\n        return data;\n    if (data && data._placeholder === true) {\n        const isIndexValid = typeof data.num === \"number\" &&\n            data.num >= 0 &&\n            data.num < buffers.length;\n        if (isIndexValid) {\n            return buffers[data.num]; // appropriate buffer (should be natural order anyway)\n        }\n        else {\n            throw new Error(\"illegal attachments\");\n        }\n    }\n    else if (Array.isArray(data)) {\n        for (let i = 0; i < data.length; i++) {\n            data[i] = _reconstructPacket(data[i], buffers);\n        }\n    }\n    else if (typeof data === \"object\") {\n        for (const key in data) {\n            if (Object.prototype.hasOwnProperty.call(data, key)) {\n                data[key] = _reconstructPacket(data[key], buffers);\n            }\n        }\n    }\n    return data;\n}\n","import { Emitter } from \"@socket.io/component-emitter\";\nimport { deconstructPacket, reconstructPacket } from \"./binary.js\";\nimport { isBinary, hasBinary } from \"./is-binary.js\";\n/**\n * These strings must not be used as event names, as they have a special meaning.\n */\nconst RESERVED_EVENTS = [\n    \"connect\",\n    \"connect_error\",\n    \"disconnect\",\n    \"disconnecting\",\n    \"newListener\",\n    \"removeListener\", // used by the Node.js EventEmitter\n];\n/**\n * Protocol version.\n *\n * @public\n */\nexport const protocol = 5;\nexport var PacketType;\n(function (PacketType) {\n    PacketType[PacketType[\"CONNECT\"] = 0] = \"CONNECT\";\n    PacketType[PacketType[\"DISCONNECT\"] = 1] = \"DISCONNECT\";\n    PacketType[PacketType[\"EVENT\"] = 2] = \"EVENT\";\n    PacketType[PacketType[\"ACK\"] = 3] = \"ACK\";\n    PacketType[PacketType[\"CONNECT_ERROR\"] = 4] = \"CONNECT_ERROR\";\n    PacketType[PacketType[\"BINARY_EVENT\"] = 5] = \"BINARY_EVENT\";\n    PacketType[PacketType[\"BINARY_ACK\"] = 6] = \"BINARY_ACK\";\n})(PacketType || (PacketType = {}));\n/**\n * A socket.io Encoder instance\n */\nexport class Encoder {\n    /**\n     * Encoder constructor\n     *\n     * @param {function} replacer - custom replacer to pass down to JSON.parse\n     */\n    constructor(replacer) {\n        this.replacer = replacer;\n    }\n    /**\n     * Encode a packet as a single string if non-binary, or as a\n     * buffer sequence, depending on packet type.\n     *\n     * @param {Object} obj - packet object\n     */\n    encode(obj) {\n        if (obj.type === PacketType.EVENT || obj.type === PacketType.ACK) {\n            if (hasBinary(obj)) {\n                return this.encodeAsBinary({\n                    type: obj.type === PacketType.EVENT\n                        ? PacketType.BINARY_EVENT\n                        : PacketType.BINARY_ACK,\n                    nsp: obj.nsp,\n                    data: obj.data,\n                    id: obj.id,\n                });\n            }\n        }\n        return [this.encodeAsString(obj)];\n    }\n    /**\n     * Encode packet as string.\n     */\n    encodeAsString(obj) {\n        // first is type\n        let str = \"\" + obj.type;\n        // attachments if we have them\n        if (obj.type === PacketType.BINARY_EVENT ||\n            obj.type === PacketType.BINARY_ACK) {\n            str += obj.attachments + \"-\";\n        }\n        // if we have a namespace other than `/`\n        // we append it followed by a comma `,`\n        if (obj.nsp && \"/\" !== obj.nsp) {\n            str += obj.nsp + \",\";\n        }\n        // immediately followed by the id\n        if (null != obj.id) {\n            str += obj.id;\n        }\n        // json data\n        if (null != obj.data) {\n            str += JSON.stringify(obj.data, this.replacer);\n        }\n        return str;\n    }\n    /**\n     * Encode packet as 'buffer sequence' by removing blobs, and\n     * deconstructing packet into object with placeholders and\n     * a list of buffers.\n     */\n    encodeAsBinary(obj) {\n        const deconstruction = deconstructPacket(obj);\n        const pack = this.encodeAsString(deconstruction.packet);\n        const buffers = deconstruction.buffers;\n        buffers.unshift(pack); // add packet info to beginning of data list\n        return buffers; // write all the buffers\n    }\n}\n// see https://stackoverflow.com/questions/8511281/check-if-a-value-is-an-object-in-javascript\nfunction isObject(value) {\n    return Object.prototype.toString.call(value) === \"[object Object]\";\n}\n/**\n * A socket.io Decoder instance\n *\n * @return {Object} decoder\n */\nexport class Decoder extends Emitter {\n    /**\n     * Decoder constructor\n     *\n     * @param {function} reviver - custom reviver to pass down to JSON.stringify\n     */\n    constructor(reviver) {\n        super();\n        this.reviver = reviver;\n    }\n    /**\n     * Decodes an encoded packet string into packet JSON.\n     *\n     * @param {String} obj - encoded packet\n     */\n    add(obj) {\n        let packet;\n        if (typeof obj === \"string\") {\n            if (this.reconstructor) {\n                throw new Error(\"got plaintext data when reconstructing a packet\");\n            }\n            packet = this.decodeString(obj);\n            const isBinaryEvent = packet.type === PacketType.BINARY_EVENT;\n            if (isBinaryEvent || packet.type === PacketType.BINARY_ACK) {\n                packet.type = isBinaryEvent ? PacketType.EVENT : PacketType.ACK;\n                // binary packet's json\n                this.reconstructor = new BinaryReconstructor(packet);\n                // no attachments, labeled binary but no binary data to follow\n                if (packet.attachments === 0) {\n                    super.emitReserved(\"decoded\", packet);\n                }\n            }\n            else {\n                // non-binary full packet\n                super.emitReserved(\"decoded\", packet);\n            }\n        }\n        else if (isBinary(obj) || obj.base64) {\n            // raw binary data\n            if (!this.reconstructor) {\n                throw new Error(\"got binary data when not reconstructing a packet\");\n            }\n            else {\n                packet = this.reconstructor.takeBinaryData(obj);\n                if (packet) {\n                    // received final buffer\n                    this.reconstructor = null;\n                    super.emitReserved(\"decoded\", packet);\n                }\n            }\n        }\n        else {\n            throw new Error(\"Unknown type: \" + obj);\n        }\n    }\n    /**\n     * Decode a packet String (JSON data)\n     *\n     * @param {String} str\n     * @return {Object} packet\n     */\n    decodeString(str) {\n        let i = 0;\n        // look up type\n        const p = {\n            type: Number(str.charAt(0)),\n        };\n        if (PacketType[p.type] === undefined) {\n            throw new Error(\"unknown packet type \" + p.type);\n        }\n        // look up attachments if type binary\n        if (p.type === PacketType.BINARY_EVENT ||\n            p.type === PacketType.BINARY_ACK) {\n            const start = i + 1;\n            while (str.charAt(++i) !== \"-\" && i != str.length) { }\n            const buf = str.substring(start, i);\n            if (buf != Number(buf) || str.charAt(i) !== \"-\") {\n                throw new Error(\"Illegal attachments\");\n            }\n            p.attachments = Number(buf);\n        }\n        // look up namespace (if any)\n        if (\"/\" === str.charAt(i + 1)) {\n            const start = i + 1;\n            while (++i) {\n                const c = str.charAt(i);\n                if (\",\" === c)\n                    break;\n                if (i === str.length)\n                    break;\n            }\n            p.nsp = str.substring(start, i);\n        }\n        else {\n            p.nsp = \"/\";\n        }\n        // look up id\n        const next = str.charAt(i + 1);\n        if (\"\" !== next && Number(next) == next) {\n            const start = i + 1;\n            while (++i) {\n                const c = str.charAt(i);\n                if (null == c || Number(c) != c) {\n                    --i;\n                    break;\n                }\n                if (i === str.length)\n                    break;\n            }\n            p.id = Number(str.substring(start, i + 1));\n        }\n        // look up json data\n        if (str.charAt(++i)) {\n            const payload = this.tryParse(str.substr(i));\n            if (Decoder.isPayloadValid(p.type, payload)) {\n                p.data = payload;\n            }\n            else {\n                throw new Error(\"invalid payload\");\n            }\n        }\n        return p;\n    }\n    tryParse(str) {\n        try {\n            return JSON.parse(str, this.reviver);\n        }\n        catch (e) {\n            return false;\n        }\n    }\n    static isPayloadValid(type, payload) {\n        switch (type) {\n            case PacketType.CONNECT:\n                return isObject(payload);\n            case PacketType.DISCONNECT:\n                return payload === undefined;\n            case PacketType.CONNECT_ERROR:\n                return typeof payload === \"string\" || isObject(payload);\n            case PacketType.EVENT:\n            case PacketType.BINARY_EVENT:\n                return (Array.isArray(payload) &&\n                    (typeof payload[0] === \"number\" ||\n                        (typeof payload[0] === \"string\" &&\n                            RESERVED_EVENTS.indexOf(payload[0]) === -1)));\n            case PacketType.ACK:\n            case PacketType.BINARY_ACK:\n                return Array.isArray(payload);\n        }\n    }\n    /**\n     * Deallocates a parser's resources\n     */\n    destroy() {\n        if (this.reconstructor) {\n            this.reconstructor.finishedReconstruction();\n            this.reconstructor = null;\n        }\n    }\n}\n/**\n * A manager of a binary event's 'buffer sequence'. Should\n * be constructed whenever a packet of type BINARY_EVENT is\n * decoded.\n *\n * @param {Object} packet\n * @return {BinaryReconstructor} initialized reconstructor\n */\nclass BinaryReconstructor {\n    constructor(packet) {\n        this.packet = packet;\n        this.buffers = [];\n        this.reconPack = packet;\n    }\n    /**\n     * Method to be called when binary data received from connection\n     * after a BINARY_EVENT packet.\n     *\n     * @param {Buffer | ArrayBuffer} binData - the raw binary data received\n     * @return {null | Object} returns null if more binary data is expected or\n     *   a reconstructed packet object if all buffers have been received.\n     */\n    takeBinaryData(binData) {\n        this.buffers.push(binData);\n        if (this.buffers.length === this.reconPack.attachments) {\n            // done with buffer list\n            const packet = reconstructPacket(this.reconPack, this.buffers);\n            this.finishedReconstruction();\n            return packet;\n        }\n        return null;\n    }\n    /**\n     * Cleans up binary packet reconstruction variables.\n     */\n    finishedReconstruction() {\n        this.reconPack = null;\n        this.buffers = [];\n    }\n}\n","export function on(obj, ev, fn) {\n    obj.on(ev, fn);\n    return function subDestroy() {\n        obj.off(ev, fn);\n    };\n}\n","import { PacketType } from \"socket.io-parser\";\nimport { on } from \"./on.js\";\nimport { Emitter, } from \"@socket.io/component-emitter\";\n/**\n * Internal events.\n * These events can't be emitted by the user.\n */\nconst RESERVED_EVENTS = Object.freeze({\n    connect: 1,\n    connect_error: 1,\n    disconnect: 1,\n    disconnecting: 1,\n    // EventEmitter reserved events: https://nodejs.org/api/events.html#events_event_newlistener\n    newListener: 1,\n    removeListener: 1,\n});\n/**\n * A Socket is the fundamental class for interacting with the server.\n *\n * A Socket belongs to a certain Namespace (by default /) and uses an underlying {@link Manager} to communicate.\n *\n * @example\n * const socket = io();\n *\n * socket.on(\"connect\", () => {\n *   console.log(\"connected\");\n * });\n *\n * // send an event to the server\n * socket.emit(\"foo\", \"bar\");\n *\n * socket.on(\"foobar\", () => {\n *   // an event was received from the server\n * });\n *\n * // upon disconnection\n * socket.on(\"disconnect\", (reason) => {\n *   console.log(`disconnected due to ${reason}`);\n * });\n */\nexport class Socket extends Emitter {\n    /**\n     * `Socket` constructor.\n     */\n    constructor(io, nsp, opts) {\n        super();\n        /**\n         * Whether the socket is currently connected to the server.\n         *\n         * @example\n         * const socket = io();\n         *\n         * socket.on(\"connect\", () => {\n         *   console.log(socket.connected); // true\n         * });\n         *\n         * socket.on(\"disconnect\", () => {\n         *   console.log(socket.connected); // false\n         * });\n         */\n        this.connected = false;\n        /**\n         * Whether the connection state was recovered after a temporary disconnection. In that case, any missed packets will\n         * be transmitted by the server.\n         */\n        this.recovered = false;\n        /**\n         * Buffer for packets received before the CONNECT packet\n         */\n        this.receiveBuffer = [];\n        /**\n         * Buffer for packets that will be sent once the socket is connected\n         */\n        this.sendBuffer = [];\n        /**\n         * The queue of packets to be sent with retry in case of failure.\n         *\n         * Packets are sent one by one, each waiting for the server acknowledgement, in order to guarantee the delivery order.\n         * @private\n         */\n        this._queue = [];\n        /**\n         * A sequence to generate the ID of the {@link QueuedPacket}.\n         * @private\n         */\n        this._queueSeq = 0;\n        this.ids = 0;\n        this.acks = {};\n        this.flags = {};\n        this.io = io;\n        this.nsp = nsp;\n        if (opts && opts.auth) {\n            this.auth = opts.auth;\n        }\n        this._opts = Object.assign({}, opts);\n        if (this.io._autoConnect)\n            this.open();\n    }\n    /**\n     * Whether the socket is currently disconnected\n     *\n     * @example\n     * const socket = io();\n     *\n     * socket.on(\"connect\", () => {\n     *   console.log(socket.disconnected); // false\n     * });\n     *\n     * socket.on(\"disconnect\", () => {\n     *   console.log(socket.disconnected); // true\n     * });\n     */\n    get disconnected() {\n        return !this.connected;\n    }\n    /**\n     * Subscribe to open, close and packet events\n     *\n     * @private\n     */\n    subEvents() {\n        if (this.subs)\n            return;\n        const io = this.io;\n        this.subs = [\n            on(io, \"open\", this.onopen.bind(this)),\n            on(io, \"packet\", this.onpacket.bind(this)),\n            on(io, \"error\", this.onerror.bind(this)),\n            on(io, \"close\", this.onclose.bind(this)),\n        ];\n    }\n    /**\n     * Whether the Socket will try to reconnect when its Manager connects or reconnects.\n     *\n     * @example\n     * const socket = io();\n     *\n     * console.log(socket.active); // true\n     *\n     * socket.on(\"disconnect\", (reason) => {\n     *   if (reason === \"io server disconnect\") {\n     *     // the disconnection was initiated by the server, you need to manually reconnect\n     *     console.log(socket.active); // false\n     *   }\n     *   // else the socket will automatically try to reconnect\n     *   console.log(socket.active); // true\n     * });\n     */\n    get active() {\n        return !!this.subs;\n    }\n    /**\n     * \"Opens\" the socket.\n     *\n     * @example\n     * const socket = io({\n     *   autoConnect: false\n     * });\n     *\n     * socket.connect();\n     */\n    connect() {\n        if (this.connected)\n            return this;\n        this.subEvents();\n        if (!this.io[\"_reconnecting\"])\n            this.io.open(); // ensure open\n        if (\"open\" === this.io._readyState)\n            this.onopen();\n        return this;\n    }\n    /**\n     * Alias for {@link connect()}.\n     */\n    open() {\n        return this.connect();\n    }\n    /**\n     * Sends a `message` event.\n     *\n     * This method mimics the WebSocket.send() method.\n     *\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/WebSocket/send\n     *\n     * @example\n     * socket.send(\"hello\");\n     *\n     * // this is equivalent to\n     * socket.emit(\"message\", \"hello\");\n     *\n     * @return self\n     */\n    send(...args) {\n        args.unshift(\"message\");\n        this.emit.apply(this, args);\n        return this;\n    }\n    /**\n     * Override `emit`.\n     * If the event is in `events`, it's emitted normally.\n     *\n     * @example\n     * socket.emit(\"hello\", \"world\");\n     *\n     * // all serializable datastructures are supported (no need to call JSON.stringify)\n     * socket.emit(\"hello\", 1, \"2\", { 3: [\"4\"], 5: Uint8Array.from([6]) });\n     *\n     * // with an acknowledgement from the server\n     * socket.emit(\"hello\", \"world\", (val) => {\n     *   // ...\n     * });\n     *\n     * @return self\n     */\n    emit(ev, ...args) {\n        if (RESERVED_EVENTS.hasOwnProperty(ev)) {\n            throw new Error('\"' + ev.toString() + '\" is a reserved event name');\n        }\n        args.unshift(ev);\n        if (this._opts.retries && !this.flags.fromQueue && !this.flags.volatile) {\n            this._addToQueue(args);\n            return this;\n        }\n        const packet = {\n            type: PacketType.EVENT,\n            data: args,\n        };\n        packet.options = {};\n        packet.options.compress = this.flags.compress !== false;\n        // event ack callback\n        if (\"function\" === typeof args[args.length - 1]) {\n            const id = this.ids++;\n            const ack = args.pop();\n            this._registerAckCallback(id, ack);\n            packet.id = id;\n        }\n        const isTransportWritable = this.io.engine &&\n            this.io.engine.transport &&\n            this.io.engine.transport.writable;\n        const discardPacket = this.flags.volatile && (!isTransportWritable || !this.connected);\n        if (discardPacket) {\n        }\n        else if (this.connected) {\n            this.notifyOutgoingListeners(packet);\n            this.packet(packet);\n        }\n        else {\n            this.sendBuffer.push(packet);\n        }\n        this.flags = {};\n        return this;\n    }\n    /**\n     * @private\n     */\n    _registerAckCallback(id, ack) {\n        var _a;\n        const timeout = (_a = this.flags.timeout) !== null && _a !== void 0 ? _a : this._opts.ackTimeout;\n        if (timeout === undefined) {\n            this.acks[id] = ack;\n            return;\n        }\n        // @ts-ignore\n        const timer = this.io.setTimeoutFn(() => {\n            delete this.acks[id];\n            for (let i = 0; i < this.sendBuffer.length; i++) {\n                if (this.sendBuffer[i].id === id) {\n                    this.sendBuffer.splice(i, 1);\n                }\n            }\n            ack.call(this, new Error(\"operation has timed out\"));\n        }, timeout);\n        this.acks[id] = (...args) => {\n            // @ts-ignore\n            this.io.clearTimeoutFn(timer);\n            ack.apply(this, [null, ...args]);\n        };\n    }\n    /**\n     * Emits an event and waits for an acknowledgement\n     *\n     * @example\n     * // without timeout\n     * const response = await socket.emitWithAck(\"hello\", \"world\");\n     *\n     * // with a specific timeout\n     * try {\n     *   const response = await socket.timeout(1000).emitWithAck(\"hello\", \"world\");\n     * } catch (err) {\n     *   // the server did not acknowledge the event in the given delay\n     * }\n     *\n     * @return a Promise that will be fulfilled when the server acknowledges the event\n     */\n    emitWithAck(ev, ...args) {\n        // the timeout flag is optional\n        const withErr = this.flags.timeout !== undefined || this._opts.ackTimeout !== undefined;\n        return new Promise((resolve, reject) => {\n            args.push((arg1, arg2) => {\n                if (withErr) {\n                    return arg1 ? reject(arg1) : resolve(arg2);\n                }\n                else {\n                    return resolve(arg1);\n                }\n            });\n            this.emit(ev, ...args);\n        });\n    }\n    /**\n     * Add the packet to the queue.\n     * @param args\n     * @private\n     */\n    _addToQueue(args) {\n        let ack;\n        if (typeof args[args.length - 1] === \"function\") {\n            ack = args.pop();\n        }\n        const packet = {\n            id: this._queueSeq++,\n            tryCount: 0,\n            pending: false,\n            args,\n            flags: Object.assign({ fromQueue: true }, this.flags),\n        };\n        args.push((err, ...responseArgs) => {\n            if (packet !== this._queue[0]) {\n                // the packet has already been acknowledged\n                return;\n            }\n            const hasError = err !== null;\n            if (hasError) {\n                if (packet.tryCount > this._opts.retries) {\n                    this._queue.shift();\n                    if (ack) {\n                        ack(err);\n                    }\n                }\n            }\n            else {\n                this._queue.shift();\n                if (ack) {\n                    ack(null, ...responseArgs);\n                }\n            }\n            packet.pending = false;\n            return this._drainQueue();\n        });\n        this._queue.push(packet);\n        this._drainQueue();\n    }\n    /**\n     * Send the first packet of the queue, and wait for an acknowledgement from the server.\n     * @param force - whether to resend a packet that has not been acknowledged yet\n     *\n     * @private\n     */\n    _drainQueue(force = false) {\n        if (!this.connected || this._queue.length === 0) {\n            return;\n        }\n        const packet = this._queue[0];\n        if (packet.pending && !force) {\n            return;\n        }\n        packet.pending = true;\n        packet.tryCount++;\n        this.flags = packet.flags;\n        this.emit.apply(this, packet.args);\n    }\n    /**\n     * Sends a packet.\n     *\n     * @param packet\n     * @private\n     */\n    packet(packet) {\n        packet.nsp = this.nsp;\n        this.io._packet(packet);\n    }\n    /**\n     * Called upon engine `open`.\n     *\n     * @private\n     */\n    onopen() {\n        if (typeof this.auth == \"function\") {\n            this.auth((data) => {\n                this._sendConnectPacket(data);\n            });\n        }\n        else {\n            this._sendConnectPacket(this.auth);\n        }\n    }\n    /**\n     * Sends a CONNECT packet to initiate the Socket.IO session.\n     *\n     * @param data\n     * @private\n     */\n    _sendConnectPacket(data) {\n        this.packet({\n            type: PacketType.CONNECT,\n            data: this._pid\n                ? Object.assign({ pid: this._pid, offset: this._lastOffset }, data)\n                : data,\n        });\n    }\n    /**\n     * Called upon engine or manager `error`.\n     *\n     * @param err\n     * @private\n     */\n    onerror(err) {\n        if (!this.connected) {\n            this.emitReserved(\"connect_error\", err);\n        }\n    }\n    /**\n     * Called upon engine `close`.\n     *\n     * @param reason\n     * @param description\n     * @private\n     */\n    onclose(reason, description) {\n        this.connected = false;\n        delete this.id;\n        this.emitReserved(\"disconnect\", reason, description);\n    }\n    /**\n     * Called with socket packet.\n     *\n     * @param packet\n     * @private\n     */\n    onpacket(packet) {\n        const sameNamespace = packet.nsp === this.nsp;\n        if (!sameNamespace)\n            return;\n        switch (packet.type) {\n            case PacketType.CONNECT:\n                if (packet.data && packet.data.sid) {\n                    this.onconnect(packet.data.sid, packet.data.pid);\n                }\n                else {\n                    this.emitReserved(\"connect_error\", new Error(\"It seems you are trying to reach a Socket.IO server in v2.x with a v3.x client, but they are not compatible (more information here: https://socket.io/docs/v3/migrating-from-2-x-to-3-0/)\"));\n                }\n                break;\n            case PacketType.EVENT:\n            case PacketType.BINARY_EVENT:\n                this.onevent(packet);\n                break;\n            case PacketType.ACK:\n            case PacketType.BINARY_ACK:\n                this.onack(packet);\n                break;\n            case PacketType.DISCONNECT:\n                this.ondisconnect();\n                break;\n            case PacketType.CONNECT_ERROR:\n                this.destroy();\n                const err = new Error(packet.data.message);\n                // @ts-ignore\n                err.data = packet.data.data;\n                this.emitReserved(\"connect_error\", err);\n                break;\n        }\n    }\n    /**\n     * Called upon a server event.\n     *\n     * @param packet\n     * @private\n     */\n    onevent(packet) {\n        const args = packet.data || [];\n        if (null != packet.id) {\n            args.push(this.ack(packet.id));\n        }\n        if (this.connected) {\n            this.emitEvent(args);\n        }\n        else {\n            this.receiveBuffer.push(Object.freeze(args));\n        }\n    }\n    emitEvent(args) {\n        if (this._anyListeners && this._anyListeners.length) {\n            const listeners = this._anyListeners.slice();\n            for (const listener of listeners) {\n                listener.apply(this, args);\n            }\n        }\n        super.emit.apply(this, args);\n        if (this._pid && args.length && typeof args[args.length - 1] === \"string\") {\n            this._lastOffset = args[args.length - 1];\n        }\n    }\n    /**\n     * Produces an ack callback to emit with an event.\n     *\n     * @private\n     */\n    ack(id) {\n        const self = this;\n        let sent = false;\n        return function (...args) {\n            // prevent double callbacks\n            if (sent)\n                return;\n            sent = true;\n            self.packet({\n                type: PacketType.ACK,\n                id: id,\n                data: args,\n            });\n        };\n    }\n    /**\n     * Called upon a server acknowlegement.\n     *\n     * @param packet\n     * @private\n     */\n    onack(packet) {\n        const ack = this.acks[packet.id];\n        if (\"function\" === typeof ack) {\n            ack.apply(this, packet.data);\n            delete this.acks[packet.id];\n        }\n        else {\n        }\n    }\n    /**\n     * Called upon server connect.\n     *\n     * @private\n     */\n    onconnect(id, pid) {\n        this.id = id;\n        this.recovered = pid && this._pid === pid;\n        this._pid = pid; // defined only if connection state recovery is enabled\n        this.connected = true;\n        this.emitBuffered();\n        this.emitReserved(\"connect\");\n        this._drainQueue(true);\n    }\n    /**\n     * Emit buffered events (received and emitted).\n     *\n     * @private\n     */\n    emitBuffered() {\n        this.receiveBuffer.forEach((args) => this.emitEvent(args));\n        this.receiveBuffer = [];\n        this.sendBuffer.forEach((packet) => {\n            this.notifyOutgoingListeners(packet);\n            this.packet(packet);\n        });\n        this.sendBuffer = [];\n    }\n    /**\n     * Called upon server disconnect.\n     *\n     * @private\n     */\n    ondisconnect() {\n        this.destroy();\n        this.onclose(\"io server disconnect\");\n    }\n    /**\n     * Called upon forced client/server side disconnections,\n     * this method ensures the manager stops tracking us and\n     * that reconnections don't get triggered for this.\n     *\n     * @private\n     */\n    destroy() {\n        if (this.subs) {\n            // clean subscriptions to avoid reconnections\n            this.subs.forEach((subDestroy) => subDestroy());\n            this.subs = undefined;\n        }\n        this.io[\"_destroy\"](this);\n    }\n    /**\n     * Disconnects the socket manually. In that case, the socket will not try to reconnect.\n     *\n     * If this is the last active Socket instance of the {@link Manager}, the low-level connection will be closed.\n     *\n     * @example\n     * const socket = io();\n     *\n     * socket.on(\"disconnect\", (reason) => {\n     *   // console.log(reason); prints \"io client disconnect\"\n     * });\n     *\n     * socket.disconnect();\n     *\n     * @return self\n     */\n    disconnect() {\n        if (this.connected) {\n            this.packet({ type: PacketType.DISCONNECT });\n        }\n        // remove socket from pool\n        this.destroy();\n        if (this.connected) {\n            // fire events\n            this.onclose(\"io client disconnect\");\n        }\n        return this;\n    }\n    /**\n     * Alias for {@link disconnect()}.\n     *\n     * @return self\n     */\n    close() {\n        return this.disconnect();\n    }\n    /**\n     * Sets the compress flag.\n     *\n     * @example\n     * socket.compress(false).emit(\"hello\");\n     *\n     * @param compress - if `true`, compresses the sending data\n     * @return self\n     */\n    compress(compress) {\n        this.flags.compress = compress;\n        return this;\n    }\n    /**\n     * Sets a modifier for a subsequent event emission that the event message will be dropped when this socket is not\n     * ready to send messages.\n     *\n     * @example\n     * socket.volatile.emit(\"hello\"); // the server may or may not receive it\n     *\n     * @returns self\n     */\n    get volatile() {\n        this.flags.volatile = true;\n        return this;\n    }\n    /**\n     * Sets a modifier for a subsequent event emission that the callback will be called with an error when the\n     * given number of milliseconds have elapsed without an acknowledgement from the server:\n     *\n     * @example\n     * socket.timeout(5000).emit(\"my-event\", (err) => {\n     *   if (err) {\n     *     // the server did not acknowledge the event in the given delay\n     *   }\n     * });\n     *\n     * @returns self\n     */\n    timeout(timeout) {\n        this.flags.timeout = timeout;\n        return this;\n    }\n    /**\n     * Adds a listener that will be fired when any event is emitted. The event name is passed as the first argument to the\n     * callback.\n     *\n     * @example\n     * socket.onAny((event, ...args) => {\n     *   console.log(`got ${event}`);\n     * });\n     *\n     * @param listener\n     */\n    onAny(listener) {\n        this._anyListeners = this._anyListeners || [];\n        this._anyListeners.push(listener);\n        return this;\n    }\n    /**\n     * Adds a listener that will be fired when any event is emitted. The event name is passed as the first argument to the\n     * callback. The listener is added to the beginning of the listeners array.\n     *\n     * @example\n     * socket.prependAny((event, ...args) => {\n     *   console.log(`got event ${event}`);\n     * });\n     *\n     * @param listener\n     */\n    prependAny(listener) {\n        this._anyListeners = this._anyListeners || [];\n        this._anyListeners.unshift(listener);\n        return this;\n    }\n    /**\n     * Removes the listener that will be fired when any event is emitted.\n     *\n     * @example\n     * const catchAllListener = (event, ...args) => {\n     *   console.log(`got event ${event}`);\n     * }\n     *\n     * socket.onAny(catchAllListener);\n     *\n     * // remove a specific listener\n     * socket.offAny(catchAllListener);\n     *\n     * // or remove all listeners\n     * socket.offAny();\n     *\n     * @param listener\n     */\n    offAny(listener) {\n        if (!this._anyListeners) {\n            return this;\n        }\n        if (listener) {\n            const listeners = this._anyListeners;\n            for (let i = 0; i < listeners.length; i++) {\n                if (listener === listeners[i]) {\n                    listeners.splice(i, 1);\n                    return this;\n                }\n            }\n        }\n        else {\n            this._anyListeners = [];\n        }\n        return this;\n    }\n    /**\n     * Returns an array of listeners that are listening for any event that is specified. This array can be manipulated,\n     * e.g. to remove listeners.\n     */\n    listenersAny() {\n        return this._anyListeners || [];\n    }\n    /**\n     * Adds a listener that will be fired when any event is emitted. The event name is passed as the first argument to the\n     * callback.\n     *\n     * Note: acknowledgements sent to the server are not included.\n     *\n     * @example\n     * socket.onAnyOutgoing((event, ...args) => {\n     *   console.log(`sent event ${event}`);\n     * });\n     *\n     * @param listener\n     */\n    onAnyOutgoing(listener) {\n        this._anyOutgoingListeners = this._anyOutgoingListeners || [];\n        this._anyOutgoingListeners.push(listener);\n        return this;\n    }\n    /**\n     * Adds a listener that will be fired when any event is emitted. The event name is passed as the first argument to the\n     * callback. The listener is added to the beginning of the listeners array.\n     *\n     * Note: acknowledgements sent to the server are not included.\n     *\n     * @example\n     * socket.prependAnyOutgoing((event, ...args) => {\n     *   console.log(`sent event ${event}`);\n     * });\n     *\n     * @param listener\n     */\n    prependAnyOutgoing(listener) {\n        this._anyOutgoingListeners = this._anyOutgoingListeners || [];\n        this._anyOutgoingListeners.unshift(listener);\n        return this;\n    }\n    /**\n     * Removes the listener that will be fired when any event is emitted.\n     *\n     * @example\n     * const catchAllListener = (event, ...args) => {\n     *   console.log(`sent event ${event}`);\n     * }\n     *\n     * socket.onAnyOutgoing(catchAllListener);\n     *\n     * // remove a specific listener\n     * socket.offAnyOutgoing(catchAllListener);\n     *\n     * // or remove all listeners\n     * socket.offAnyOutgoing();\n     *\n     * @param [listener] - the catch-all listener (optional)\n     */\n    offAnyOutgoing(listener) {\n        if (!this._anyOutgoingListeners) {\n            return this;\n        }\n        if (listener) {\n            const listeners = this._anyOutgoingListeners;\n            for (let i = 0; i < listeners.length; i++) {\n                if (listener === listeners[i]) {\n                    listeners.splice(i, 1);\n                    return this;\n                }\n            }\n        }\n        else {\n            this._anyOutgoingListeners = [];\n        }\n        return this;\n    }\n    /**\n     * Returns an array of listeners that are listening for any event that is specified. This array can be manipulated,\n     * e.g. to remove listeners.\n     */\n    listenersAnyOutgoing() {\n        return this._anyOutgoingListeners || [];\n    }\n    /**\n     * Notify the listeners for each packet sent\n     *\n     * @param packet\n     *\n     * @private\n     */\n    notifyOutgoingListeners(packet) {\n        if (this._anyOutgoingListeners && this._anyOutgoingListeners.length) {\n            const listeners = this._anyOutgoingListeners.slice();\n            for (const listener of listeners) {\n                listener.apply(this, packet.data);\n            }\n        }\n    }\n}\n","/**\n * Initialize backoff timer with `opts`.\n *\n * - `min` initial timeout in milliseconds [100]\n * - `max` max timeout [10000]\n * - `jitter` [0]\n * - `factor` [2]\n *\n * @param {Object} opts\n * @api public\n */\nexport function Backoff(opts) {\n    opts = opts || {};\n    this.ms = opts.min || 100;\n    this.max = opts.max || 10000;\n    this.factor = opts.factor || 2;\n    this.jitter = opts.jitter > 0 && opts.jitter <= 1 ? opts.jitter : 0;\n    this.attempts = 0;\n}\n/**\n * Return the backoff duration.\n *\n * @return {Number}\n * @api public\n */\nBackoff.prototype.duration = function () {\n    var ms = this.ms * Math.pow(this.factor, this.attempts++);\n    if (this.jitter) {\n        var rand = Math.random();\n        var deviation = Math.floor(rand * this.jitter * ms);\n        ms = (Math.floor(rand * 10) & 1) == 0 ? ms - deviation : ms + deviation;\n    }\n    return Math.min(ms, this.max) | 0;\n};\n/**\n * Reset the number of attempts.\n *\n * @api public\n */\nBackoff.prototype.reset = function () {\n    this.attempts = 0;\n};\n/**\n * Set the minimum duration\n *\n * @api public\n */\nBackoff.prototype.setMin = function (min) {\n    this.ms = min;\n};\n/**\n * Set the maximum duration\n *\n * @api public\n */\nBackoff.prototype.setMax = function (max) {\n    this.max = max;\n};\n/**\n * Set the jitter\n *\n * @api public\n */\nBackoff.prototype.setJitter = function (jitter) {\n    this.jitter = jitter;\n};\n","import { Socket as Engine, installTimerFunctions, nextTick, } from \"engine.io-client\";\nimport { Socket } from \"./socket.js\";\nimport * as parser from \"socket.io-parser\";\nimport { on } from \"./on.js\";\nimport { Backoff } from \"./contrib/backo2.js\";\nimport { Emitter, } from \"@socket.io/component-emitter\";\nexport class Manager extends Emitter {\n    constructor(uri, opts) {\n        var _a;\n        super();\n        this.nsps = {};\n        this.subs = [];\n        if (uri && \"object\" === typeof uri) {\n            opts = uri;\n            uri = undefined;\n        }\n        opts = opts || {};\n        opts.path = opts.path || \"/socket.io\";\n        this.opts = opts;\n        installTimerFunctions(this, opts);\n        this.reconnection(opts.reconnection !== false);\n        this.reconnectionAttempts(opts.reconnectionAttempts || Infinity);\n        this.reconnectionDelay(opts.reconnectionDelay || 1000);\n        this.reconnectionDelayMax(opts.reconnectionDelayMax || 5000);\n        this.randomizationFactor((_a = opts.randomizationFactor) !== null && _a !== void 0 ? _a : 0.5);\n        this.backoff = new Backoff({\n            min: this.reconnectionDelay(),\n            max: this.reconnectionDelayMax(),\n            jitter: this.randomizationFactor(),\n        });\n        this.timeout(null == opts.timeout ? 20000 : opts.timeout);\n        this._readyState = \"closed\";\n        this.uri = uri;\n        const _parser = opts.parser || parser;\n        this.encoder = new _parser.Encoder();\n        this.decoder = new _parser.Decoder();\n        this._autoConnect = opts.autoConnect !== false;\n        if (this._autoConnect)\n            this.open();\n    }\n    reconnection(v) {\n        if (!arguments.length)\n            return this._reconnection;\n        this._reconnection = !!v;\n        return this;\n    }\n    reconnectionAttempts(v) {\n        if (v === undefined)\n            return this._reconnectionAttempts;\n        this._reconnectionAttempts = v;\n        return this;\n    }\n    reconnectionDelay(v) {\n        var _a;\n        if (v === undefined)\n            return this._reconnectionDelay;\n        this._reconnectionDelay = v;\n        (_a = this.backoff) === null || _a === void 0 ? void 0 : _a.setMin(v);\n        return this;\n    }\n    randomizationFactor(v) {\n        var _a;\n        if (v === undefined)\n            return this._randomizationFactor;\n        this._randomizationFactor = v;\n        (_a = this.backoff) === null || _a === void 0 ? void 0 : _a.setJitter(v);\n        return this;\n    }\n    reconnectionDelayMax(v) {\n        var _a;\n        if (v === undefined)\n            return this._reconnectionDelayMax;\n        this._reconnectionDelayMax = v;\n        (_a = this.backoff) === null || _a === void 0 ? void 0 : _a.setMax(v);\n        return this;\n    }\n    timeout(v) {\n        if (!arguments.length)\n            return this._timeout;\n        this._timeout = v;\n        return this;\n    }\n    /**\n     * Starts trying to reconnect if reconnection is enabled and we have not\n     * started reconnecting yet\n     *\n     * @private\n     */\n    maybeReconnectOnOpen() {\n        // Only try to reconnect if it's the first time we're connecting\n        if (!this._reconnecting &&\n            this._reconnection &&\n            this.backoff.attempts === 0) {\n            // keeps reconnection from firing twice for the same reconnection loop\n            this.reconnect();\n        }\n    }\n    /**\n     * Sets the current transport `socket`.\n     *\n     * @param {Function} fn - optional, callback\n     * @return self\n     * @public\n     */\n    open(fn) {\n        if (~this._readyState.indexOf(\"open\"))\n            return this;\n        this.engine = new Engine(this.uri, this.opts);\n        const socket = this.engine;\n        const self = this;\n        this._readyState = \"opening\";\n        this.skipReconnect = false;\n        // emit `open`\n        const openSubDestroy = on(socket, \"open\", function () {\n            self.onopen();\n            fn && fn();\n        });\n        const onError = (err) => {\n            this.cleanup();\n            this._readyState = \"closed\";\n            this.emitReserved(\"error\", err);\n            if (fn) {\n                fn(err);\n            }\n            else {\n                // Only do this if there is no fn to handle the error\n                this.maybeReconnectOnOpen();\n            }\n        };\n        // emit `error`\n        const errorSub = on(socket, \"error\", onError);\n        if (false !== this._timeout) {\n            const timeout = this._timeout;\n            // set timer\n            const timer = this.setTimeoutFn(() => {\n                openSubDestroy();\n                onError(new Error(\"timeout\"));\n                socket.close();\n            }, timeout);\n            if (this.opts.autoUnref) {\n                timer.unref();\n            }\n            this.subs.push(() => {\n                this.clearTimeoutFn(timer);\n            });\n        }\n        this.subs.push(openSubDestroy);\n        this.subs.push(errorSub);\n        return this;\n    }\n    /**\n     * Alias for open()\n     *\n     * @return self\n     * @public\n     */\n    connect(fn) {\n        return this.open(fn);\n    }\n    /**\n     * Called upon transport open.\n     *\n     * @private\n     */\n    onopen() {\n        // clear old subs\n        this.cleanup();\n        // mark as open\n        this._readyState = \"open\";\n        this.emitReserved(\"open\");\n        // add new subs\n        const socket = this.engine;\n        this.subs.push(on(socket, \"ping\", this.onping.bind(this)), on(socket, \"data\", this.ondata.bind(this)), on(socket, \"error\", this.onerror.bind(this)), on(socket, \"close\", this.onclose.bind(this)), on(this.decoder, \"decoded\", this.ondecoded.bind(this)));\n    }\n    /**\n     * Called upon a ping.\n     *\n     * @private\n     */\n    onping() {\n        this.emitReserved(\"ping\");\n    }\n    /**\n     * Called with data.\n     *\n     * @private\n     */\n    ondata(data) {\n        try {\n            this.decoder.add(data);\n        }\n        catch (e) {\n            this.onclose(\"parse error\", e);\n        }\n    }\n    /**\n     * Called when parser fully decodes a packet.\n     *\n     * @private\n     */\n    ondecoded(packet) {\n        // the nextTick call prevents an exception in a user-provided event listener from triggering a disconnection due to a \"parse error\"\n        nextTick(() => {\n            this.emitReserved(\"packet\", packet);\n        }, this.setTimeoutFn);\n    }\n    /**\n     * Called upon socket error.\n     *\n     * @private\n     */\n    onerror(err) {\n        this.emitReserved(\"error\", err);\n    }\n    /**\n     * Creates a new socket for the given `nsp`.\n     *\n     * @return {Socket}\n     * @public\n     */\n    socket(nsp, opts) {\n        let socket = this.nsps[nsp];\n        if (!socket) {\n            socket = new Socket(this, nsp, opts);\n            this.nsps[nsp] = socket;\n        }\n        else if (this._autoConnect && !socket.active) {\n            socket.connect();\n        }\n        return socket;\n    }\n    /**\n     * Called upon a socket close.\n     *\n     * @param socket\n     * @private\n     */\n    _destroy(socket) {\n        const nsps = Object.keys(this.nsps);\n        for (const nsp of nsps) {\n            const socket = this.nsps[nsp];\n            if (socket.active) {\n                return;\n            }\n        }\n        this._close();\n    }\n    /**\n     * Writes a packet.\n     *\n     * @param packet\n     * @private\n     */\n    _packet(packet) {\n        const encodedPackets = this.encoder.encode(packet);\n        for (let i = 0; i < encodedPackets.length; i++) {\n            this.engine.write(encodedPackets[i], packet.options);\n        }\n    }\n    /**\n     * Clean up transport subscriptions and packet buffer.\n     *\n     * @private\n     */\n    cleanup() {\n        this.subs.forEach((subDestroy) => subDestroy());\n        this.subs.length = 0;\n        this.decoder.destroy();\n    }\n    /**\n     * Close the current socket.\n     *\n     * @private\n     */\n    _close() {\n        this.skipReconnect = true;\n        this._reconnecting = false;\n        this.onclose(\"forced close\");\n        if (this.engine)\n            this.engine.close();\n    }\n    /**\n     * Alias for close()\n     *\n     * @private\n     */\n    disconnect() {\n        return this._close();\n    }\n    /**\n     * Called upon engine close.\n     *\n     * @private\n     */\n    onclose(reason, description) {\n        this.cleanup();\n        this.backoff.reset();\n        this._readyState = \"closed\";\n        this.emitReserved(\"close\", reason, description);\n        if (this._reconnection && !this.skipReconnect) {\n            this.reconnect();\n        }\n    }\n    /**\n     * Attempt a reconnection.\n     *\n     * @private\n     */\n    reconnect() {\n        if (this._reconnecting || this.skipReconnect)\n            return this;\n        const self = this;\n        if (this.backoff.attempts >= this._reconnectionAttempts) {\n            this.backoff.reset();\n            this.emitReserved(\"reconnect_failed\");\n            this._reconnecting = false;\n        }\n        else {\n            const delay = this.backoff.duration();\n            this._reconnecting = true;\n            const timer = this.setTimeoutFn(() => {\n                if (self.skipReconnect)\n                    return;\n                this.emitReserved(\"reconnect_attempt\", self.backoff.attempts);\n                // check again for the case socket closed in above events\n                if (self.skipReconnect)\n                    return;\n                self.open((err) => {\n                    if (err) {\n                        self._reconnecting = false;\n                        self.reconnect();\n                        this.emitReserved(\"reconnect_error\", err);\n                    }\n                    else {\n                        self.onreconnect();\n                    }\n                });\n            }, delay);\n            if (this.opts.autoUnref) {\n                timer.unref();\n            }\n            this.subs.push(() => {\n                this.clearTimeoutFn(timer);\n            });\n        }\n    }\n    /**\n     * Called upon successful reconnect.\n     *\n     * @private\n     */\n    onreconnect() {\n        const attempt = this.backoff.attempts;\n        this._reconnecting = false;\n        this.backoff.reset();\n        this.emitReserved(\"reconnect\", attempt);\n    }\n}\n","import { url } from \"./url.js\";\nimport { Manager } from \"./manager.js\";\nimport { Socket } from \"./socket.js\";\n/**\n * Managers cache.\n */\nconst cache = {};\nfunction lookup(uri, opts) {\n    if (typeof uri === \"object\") {\n        opts = uri;\n        uri = undefined;\n    }\n    opts = opts || {};\n    const parsed = url(uri, opts.path || \"/socket.io\");\n    const source = parsed.source;\n    const id = parsed.id;\n    const path = parsed.path;\n    const sameNamespace = cache[id] && path in cache[id][\"nsps\"];\n    const newConnection = opts.forceNew ||\n        opts[\"force new connection\"] ||\n        false === opts.multiplex ||\n        sameNamespace;\n    let io;\n    if (newConnection) {\n        io = new Manager(source, opts);\n    }\n    else {\n        if (!cache[id]) {\n            cache[id] = new Manager(source, opts);\n        }\n        io = cache[id];\n    }\n    if (parsed.query && !opts.query) {\n        opts.query = parsed.queryKey;\n    }\n    return io.socket(parsed.path, opts);\n}\n// so that \"lookup\" can be used both as a function (e.g. `io(...)`) and as a\n// namespace (e.g. `io.connect(...)`), for backward compatibility\nObject.assign(lookup, {\n    Manager,\n    Socket,\n    io: lookup,\n    connect: lookup,\n});\n/**\n * Protocol version.\n *\n * @public\n */\nexport { protocol } from \"socket.io-parser\";\n/**\n * Expose constructors for standalone build.\n *\n * @public\n */\nexport { Manager, Socket, lookup as io, lookup as connect, lookup as default, };\n","import { parse } from \"engine.io-client\";\n/**\n * URL parser.\n *\n * @param uri - url\n * @param path - the request path of the connection\n * @param loc - An object meant to mimic window.location.\n *        Defaults to window.location.\n * @public\n */\nexport function url(uri, path = \"\", loc) {\n    let obj = uri;\n    // default to window.location\n    loc = loc || (typeof location !== \"undefined\" && location);\n    if (null == uri)\n        uri = loc.protocol + \"//\" + loc.host;\n    // relative path support\n    if (typeof uri === \"string\") {\n        if (\"/\" === uri.charAt(0)) {\n            if (\"/\" === uri.charAt(1)) {\n                uri = loc.protocol + uri;\n            }\n            else {\n                uri = loc.host + uri;\n            }\n        }\n        if (!/^(https?|wss?):\\/\\//.test(uri)) {\n            if (\"undefined\" !== typeof loc) {\n                uri = loc.protocol + \"//\" + uri;\n            }\n            else {\n                uri = \"https://\" + uri;\n            }\n        }\n        // parse\n        obj = parse(uri);\n    }\n    // make sure we treat `localhost:80` and `localhost` equally\n    if (!obj.port) {\n        if (/^(http|ws)$/.test(obj.protocol)) {\n            obj.port = \"80\";\n        }\n        else if (/^(http|ws)s$/.test(obj.protocol)) {\n            obj.port = \"443\";\n        }\n    }\n    obj.path = obj.path || \"/\";\n    const ipv6 = obj.host.indexOf(\":\") !== -1;\n    const host = ipv6 ? \"[\" + obj.host + \"]\" : obj.host;\n    // define unique id\n    obj.id = obj.protocol + \"://\" + host + \":\" + obj.port + path;\n    // define href\n    obj.href =\n        obj.protocol +\n            \"://\" +\n            host +\n            (loc && loc.port === obj.port ? \"\" : \":\" + obj.port);\n    return obj;\n}\n"],"names":["_superPropBase","object","property","Object","prototype","hasOwnProperty","call","getPrototypeOf","_get","Reflect","get","bind","target","receiver","base","desc","getOwnPropertyDescriptor","arguments","length","value","apply","this","PACKET_TYPES","create","PACKET_TYPES_REVERSE","keys","forEach","key","TEXT_ENCODER","ERROR_PACKET","type","data","withNativeBlob","Blob","toString","withNativeArrayBuffer","ArrayBuffer","isView","obj","buffer","encodePacket","supportsBinary","callback","encodeBlobAsBase64","fileReader","FileReader","onload","content","result","split","readAsDataURL","toArray","Uint8Array","byteOffset","byteLength","chars","lookup","i","charCodeAt","TEXT_DECODER","decodePacket","encodedPacket","binaryType","mapBinary","charAt","decodeBase64Packet","substring","decoded","base64","encoded1","encoded2","encoded3","encoded4","bufferLength","len","p","arraybuffer","bytes","decode","SEPARATOR","String","fromCharCode","Emitter","mixin","on","addEventListener","event","fn","_callbacks","push","once","off","removeListener","removeAllListeners","removeEventListener","cb","callbacks","splice","emit","args","Array","slice","emitReserved","listeners","hasListeners","globalThisShim","self","window","Function","pick","attr","reduce","acc","k","NATIVE_SET_TIMEOUT","globalThis","NATIVE_CLEAR_TIMEOUT","installTimerFunctions","opts","useNativeTimers","setTimeoutFn","clearTimeoutFn","qs","qry","pairs","l","pair","decodeURIComponent","prev","TransportError","reason","description","context","Error","Transport","writable","query","socket","readyState","doOpen","doClose","onClose","packets","write","packet","onPacket","details","onPause","schema","_hostname","_port","path","_query","hostname","indexOf","port","secure","Number","encodedQuery","str","encodeURIComponent","encode","alphabet","map","seed","num","encoded","Math","floor","yeast","now","Date","XMLHttpRequest","err","hasCORS","XHR","xdomain","e","concat","join","empty","hasXHR2","responseType","Polling","polling","location","isSSL","protocol","xd","forceBase64","withCredentials","cookieJar","createCookieJar","poll","pause","total","doPoll","encodedPayload","encodedPackets","decodedPacket","decodePayload","onOpen","close","count","encodePayload","doWrite","timestampRequests","timestampParam","sid","b64","createUri","assign","Request","uri","req","request","method","xhrStatus","onError","onData","pollXhr","undefined","_a","xhr","open","extraHeaders","setDisableHeaderCheck","setRequestHeader","addCookies","requestTimeout","timeout","onreadystatechange","parseCookies","status","onLoad","send","document","index","requestsCount","requests","cleanup","fromError","abort","responseText","attachEvent","unloadHandler","nextTick","Promise","resolve","then","WebSocket","isReactNative","navigator","product","toLowerCase","WS","check","protocols","headers","ws","addEventListeners","onopen","autoUnref","_socket","unref","onclose","closeEvent","onmessage","ev","onerror","lastPacket","WT","WebTransport","transport","transportOptions","name","closed","catch","ready","createBidirectionalStream","stream","binaryFlag","reader","readable","getReader","writer","getWriter","read","done","isBinary","TextDecoder","isPlainBinary","decodePacketFromBinary","handshake","TextEncoder","arrayBuffer","encodePacketToBinary","shouldIncludeBinaryHeader","of","transports","websocket","webtransport","re","parts","parse","src","b","replace","m","exec","source","host","authority","ipv6uri","pathNames","regx","names","queryKey","$0","$1","$2","Socket","writeBuffer","prevBufferLen","agent","upgrade","rememberUpgrade","addTrailingSlash","rejectUnauthorized","perMessageDeflate","threshold","closeOnBeforeunload","id","upgrades","pingInterval","pingTimeout","pingTimeoutTimer","beforeunloadEventListener","offlineEventListener","EIO","priorWebsocketSuccess","createTransport","shift","setTransport","onDrain","failed","onTransportOpen","msg","upgrading","flush","freezeTransport","error","onTransportClose","onupgrade","to","probe","onHandshake","JSON","resetPingTimeout","sendPacket","code","filterUpgrades","maxPayload","getWritablePackets","payloadSize","c","utf8Length","ceil","size","options","compress","cleanupAndClose","waitForUpgrade","filteredUpgrades","j","withNativeFile","File","hasBinary","toJSON","isArray","deconstructPacket","buffers","packetData","pack","_deconstructPacket","attachments","placeholder","_placeholder","newData","reconstructPacket","_reconstructPacket","PacketType","RESERVED_EVENTS","Encoder","replacer","EVENT","ACK","encodeAsString","encodeAsBinary","BINARY_EVENT","BINARY_ACK","nsp","stringify","deconstruction","unshift","isObject","Decoder","reviver","reconstructor","isBinaryEvent","decodeString","BinaryReconstructor","takeBinaryData","start","buf","next","payload","tryParse","substr","isPayloadValid","finishedReconstruction","CONNECT","DISCONNECT","CONNECT_ERROR","reconPack","binData","freeze","connect","connect_error","disconnect","disconnecting","newListener","io","connected","recovered","receiveBuffer","sendBuffer","_queue","_queueSeq","ids","acks","flags","auth","_opts","_autoConnect","subs","onpacket","subEvents","_readyState","retries","fromQueue","volatile","_addToQueue","ack","pop","_registerAckCallback","isTransportWritable","engine","discardPacket","notifyOutgoingListeners","ackTimeout","timer","withErr","reject","arg1","arg2","tryCount","pending","hasError","responseArgs","_drainQueue","force","_packet","_sendConnectPacket","_pid","pid","offset","_lastOffset","onconnect","onevent","onack","ondisconnect","destroy","message","emitEvent","_anyListeners","sent","emitBuffered","subDestroy","listener","_anyOutgoingListeners","Backoff","ms","min","max","factor","jitter","attempts","duration","pow","rand","random","deviation","reset","setMin","setMax","setJitter","Manager","nsps","reconnection","reconnectionAttempts","Infinity","reconnectionDelay","reconnectionDelayMax","randomizationFactor","backoff","_parser","parser","encoder","decoder","autoConnect","v","_reconnection","_reconnectionAttempts","_reconnectionDelay","_randomizationFactor","_reconnectionDelayMax","_timeout","_reconnecting","reconnect","Engine","skipReconnect","openSubDestroy","maybeReconnectOnOpen","errorSub","onping","ondata","ondecoded","add","active","_close","delay","onreconnect","attempt","cache","parsed","loc","test","href","url","sameNamespace","forceNew","multiplex"],"sourceRoot":""}