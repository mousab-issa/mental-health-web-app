{"version":3,"file":"static/js/490.824a680d.chunk.js","mappings":"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","sources":["components/Contact.jsx","components/TracksGrid.jsx","pages/Home.jsx"],"sourcesContent":["import React, { useState } from \"react\";\nimport \"../styles/contact.css\";\n\nconst Contact = () => {\n  const [formDetails, setFormDetails] = useState({\n    name: \"\",\n    email: \"\",\n    message: \"\",\n  });\n\n  const inputChange = (e) => {\n    const { name, value } = e.target;\n    return setFormDetails({\n      ...formDetails,\n      [name]: value,\n    });\n  };\n\n  return (\n    <section className=\"register-section flex-center\" id=\"contact\">\n      <div className=\"contact-container flex-center contact\">\n        <h2 className=\"form-heading\">Contact Us</h2>\n        <form\n          method=\"POST\"\n          // action=\"https://formspree.io/f/xkneldwn\"\n          className=\"register-form \"\n        >\n          <input\n            type=\"text\"\n            name=\"name\"\n            className=\"form-input\"\n            placeholder=\"Enter your name\"\n            value={formDetails.name}\n            onChange={inputChange}\n          />\n          <input\n            type=\"email\"\n            name=\"email\"\n            className=\"form-input\"\n            placeholder=\"Enter your email\"\n            value={formDetails.email}\n            onChange={inputChange}\n          />\n          <textarea\n            type=\"text\"\n            name=\"message\"\n            className=\"form-input\"\n            placeholder=\"Enter your message\"\n            value={formDetails.message}\n            onChange={inputChange}\n            rows=\"8\"\n            cols=\"12\"\n          ></textarea>\n\n          <button type=\"submit\" className=\"btn form-btn\">\n            send\n          </button>\n        </form>\n      </div>\n    </section>\n  );\n};\n\nexport default Contact;\n","import React, { useEffect } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { fetchTracks } from \"../redux/reducers/tracks.slice\";\n\nconst TracksGrid = () => {\n  const dispatch = useDispatch();\n  const tracks = useSelector((state) => state.track.data);\n\n  useEffect(() => {\n    dispatch(fetchTracks());\n  }, [dispatch]);\n\n  const trackTypes = [\"breathing\", \"meditation\"];\n\n  const trackTypeGroups = trackTypes.map((type) => ({\n    type,\n    tracks: tracks.filter((track) => track.type === type),\n  }));\n\n  return (\n    <div className=\"container mx-auto p-4\">\n      {trackTypeGroups.map((group, index) => (\n        <div key={index}>\n          <h2 className=\"font-bold text-2xl mb-4\">{group.type}</h2>\n          <div className=\"grid grid-cols-3 gap-4\">\n            {group.tracks.map((track) => (\n              <div\n                key={track._id}\n                className=\"card overflow-hidden shadow-lg rounded-lg h-90 w-60 md:w-80\"\n              >\n                <a href={track.link} className=\"w-full block h-full\">\n                  <img\n                    alt={track.title}\n                    src={track.image}\n                    className=\"max-h-40 w-full object-cover\"\n                  />\n                  <div className=\"bg-white  w-full p-4\">\n                    <p className=\"text-gray-800 text-xl font-medium mb-2\">\n                      {track.title}\n                    </p>\n                    <p className=\"text-gray-600 font-light text-md\">\n                      {track.description}\n                    </p>\n                    <div className=\"flex items-center mt-4\">\n                      <a href={track.link} className=\"block relative\">\n                        View file\n                      </a>\n                    </div>\n                  </div>\n                </a>\n              </div>\n            ))}\n          </div>\n        </div>\n      ))}\n    </div>\n  );\n};\n\nexport default TracksGrid;\n","import React, { Fragment, useEffect } from \"react\";\nimport Contact from \"../components/Contact\";\nimport AboutUs from \"../components/AboutUs\";\n\nimport { Carousel } from \"react-responsive-carousel\";\nimport \"react-responsive-carousel/lib/styles/carousel.min.css\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { fetchEvents } from \"../redux/reducers/events.slice\";\nimport TracksGrid from \"../components/TracksGrid\";\n\nconst Home = () => {\n  const dispatch = useDispatch();\n  const events = useSelector((state) => state.event.data);\n\n  useEffect(() => {\n    dispatch(fetchEvents());\n  }, [dispatch]);\n\n  const carouselImageStyle = {\n    maxHeight: \"50vh\",\n    objectFit: \"cover\",\n  };\n\n  const carouselLegendStyle = {\n    color: \"white\",\n    fontSize: \"2em\",\n    position: \"absolute\",\n    top: \"50%\",\n    left: \"40%\",\n\n    textAlign: \"center\",\n  };\n\n  const carouselSlideStyle = {\n    position: \"relative\",\n  };\n\n  return (\n    <Fragment>\n      <Carousel\n        autoPlay\n        interval={3000}\n        infiniteLoop\n        useKeyboardArrows\n        swipeable\n        showThumbs={false}\n      >\n        {events?.map((event, index) => (\n          <div key={index} style={carouselSlideStyle}>\n            <img\n              src={event.image}\n              alt={event.title}\n              style={carouselImageStyle}\n            />\n            <p style={carouselLegendStyle}>{event.title}</p>\n          </div>\n        ))}\n      </Carousel>\n      <TracksGrid />\n      <Contact />\n    </Fragment>\n  );\n};\n\nexport default Home;\n"],"names":["useState","name","email","message","formDetails","setFormDetails","inputChange","e","target","value","className","id","method","type","placeholder","onChange","rows","cols","dispatch","useDispatch","tracks","useSelector","state","track","data","useEffect","fetchTracks","trackTypeGroups","map","filter","group","index","href","link","alt","title","src","image","description","_id","events","event","fetchEvents","carouselImageStyle","maxHeight","objectFit","carouselLegendStyle","color","fontSize","position","top","left","textAlign","carouselSlideStyle","Fragment","autoPlay","interval","infiniteLoop","useKeyboardArrows","swipeable","showThumbs","style"],"sourceRoot":""}