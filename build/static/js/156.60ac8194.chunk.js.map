{"version":3,"file":"static/js/156.60ac8194.chunk.js","mappings":"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","sources":["components/Empty.jsx","components/AdminApplications.jsx","components/AdminAppointments.jsx","components/AdminDoctors.jsx","components/Sidebar.jsx","components/Users.jsx","utils/cloudinaryUpload.js","components/AdminEvents.jsx","components/AdminTracks.jsx","pages/Dashboard.jsx"],"sourcesContent":["import React from \"react\";\n\nconst Empty = () => {\n  return <h2 className=\"nothing flex-center\">Nothing to show</h2>;\n};\n\nexport default Empty;\n","import React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport toast from \"react-hot-toast\";\nimport Loading from \"./Loading\";\nimport { setLoading } from \"../redux/reducers/rootSlice\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport Empty from \"./Empty\";\nimport fetchData from \"../helper/apiCall\";\nimport \"../styles/user.css\";\n\naxios.defaults.baseURL = process.env.REACT_APP_SERVER_DOMAIN;\n\nconst AdminApplications = () => {\n  const [applications, setApplications] = useState([]);\n  const dispatch = useDispatch();\n  const { loading } = useSelector((state) => state.root);\n\n  const getAllApp = async (e) => {\n    try {\n      dispatch(setLoading(true));\n      const temp = await fetchData(`/doctor/getnotdoctors`);\n      setApplications(temp);\n      dispatch(setLoading(false));\n    } catch (error) {}\n  };\n\n  const acceptUser = async (userId) => {\n    try {\n      const confirm = window.confirm(\"Are you sure you want to accept?\");\n      if (confirm) {\n        const { data } = await toast.promise(\n          axios.put(\n            \"/doctor/acceptdoctor\",\n            { id: userId },\n            {\n              headers: {\n                authorization: `Bearer ${localStorage.getItem(\"token\")}`,\n              },\n              data: { userId },\n            }\n          ),\n          {\n            success: \"Application accepted\",\n            error: \"Unable to accept application\",\n            loading: \"Accepting application...\",\n          }\n        );\n        getAllApp();\n      }\n    } catch (error) {\n      return error;\n    }\n  };\n\n  const deleteUser = async (userId) => {\n    try {\n      const confirm = window.confirm(\"Are you sure you want to delete?\");\n      if (confirm) {\n        const { data } = await toast.promise(\n          axios.put(\n            \"/doctor/rejectdoctor\",\n            { id: userId },\n            {\n              headers: {\n                authorization: `Bearer ${localStorage.getItem(\"token\")}`,\n              },\n              data: { userId },\n            }\n          ),\n          {\n            success: \"Application rejected\",\n            error: \"Unable to reject application\",\n            loading: \"Rejecting application...\",\n          }\n        );\n        getAllApp();\n      }\n    } catch (error) {\n      return error;\n    }\n  };\n\n  useEffect(() => {\n    getAllApp();\n  }, []);\n\n  return (\n    <>\n      {loading ? (\n        <Loading />\n      ) : (\n        <section className=\"user-section\">\n          <h3 className=\"home-sub-heading\">All Applications</h3>\n          {applications.length > 0 ? (\n            <div className=\"user-container\">\n              <table>\n                <thead>\n                  <tr>\n                    <th>S.No</th>\n                    <th>Pic</th>\n                    <th>First Name</th>\n                    <th>Last Name</th>\n                    <th>Email</th>\n                    <th>Mobile No.</th>\n                    <th>Experience</th>\n                    <th>Specialization</th>\n                    <th>Fees</th>\n                    <th>Action</th>\n                  </tr>\n                </thead>\n                <tbody>\n                  {applications?.map((ele, i) => {\n                    return (\n                      <tr key={ele?._id}>\n                        <td>{i + 1}</td>\n                        <td>\n                          <img\n                            className=\"user-table-pic\"\n                            src={\n                              ele?.userId?.pic ||\n                              \"https://icon-library.com/images/anonymous-avatar-icon/anonymous-avatar-icon-25.jpg\"\n                            }\n                            alt={ele?.userId?.firstname}\n                          />\n                        </td>\n                        <td>{ele?.userId?.firstname}</td>\n                        <td>{ele?.userId?.lastname}</td>\n                        <td>{ele?.userId?.email}</td>\n                        <td>{ele?.userId?.mobile}</td>\n                        <td>{ele?.experience}</td>\n                        <td>{ele?.specialization}</td>\n                        <td className=\"select\">\n                          <button\n                            className=\"btn user-btn accept-btn\"\n                            onClick={() => {\n                              acceptUser(ele?.userId?._id);\n                            }}\n                          >\n                            Accept\n                          </button>\n                          <button\n                            className=\"btn user-btn\"\n                            onClick={() => {\n                              deleteUser(ele?.userId?._id);\n                            }}\n                          >\n                            Reject\n                          </button>\n                        </td>\n                      </tr>\n                    );\n                  })}\n                </tbody>\n              </table>\n            </div>\n          ) : (\n            <Empty />\n          )}\n        </section>\n      )}\n    </>\n  );\n};\n\nexport default AdminApplications;\n","import React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport toast from \"react-hot-toast\";\nimport Loading from \"./Loading\";\nimport { setLoading } from \"../redux/reducers/rootSlice\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport Empty from \"./Empty\";\nimport fetchData from \"../helper/apiCall\";\nimport \"../styles/user.css\";\n\n\naxios.defaults.baseURL = process.env.REACT_APP_SERVER_DOMAIN;\n\nconst AdminAppointments = () => {\n  const [appointments, setAppointments] = useState([]);\n  const dispatch = useDispatch();\n  const { loading } = useSelector((state) => state.root);\n\n  const getAllAppoint = async (e) => {\n    try {\n      dispatch(setLoading(true));\n      const temp = await fetchData(`/appointment/getallappointments`);\n      setAppointments(temp);\n      dispatch(setLoading(false));\n    } catch (error) {}\n  };\n\n  const deleteUser = async (userId) => {\n    try {\n      const confirm = window.confirm(\"Are you sure you want to delete?\");\n      if (confirm) {\n        const { data } = await toast.promise(\n          axios.delete(\"/user/deleteuser\", {\n            headers: {\n              authorization: `Bearer ${localStorage.getItem(\"token\")}`,\n            },\n            data: { userId },\n          }),\n          {\n            pending: \"Deleting in...\",\n            success: \"User deleted successfully\",\n            error: \"Unable to delete user\",\n            loading: \"Deleting user...\",\n          }\n        );\n        getAllAppoint();\n      }\n    } catch (error) {\n      return error;\n    }\n  };\n\n  useEffect(() => {\n    getAllAppoint();\n  }, []);\n\n  const complete = async (ele) => {\n    try {\n      const { data } = await toast.promise(\n        axios.put(\n          \"/appointment/completed\",\n          {\n            appointid: ele?._id,\n            doctorId: ele?.doctorId._id,\n            doctorname: `${ele?.userId?.firstname} ${ele?.userId?.lastname}`,\n          },\n          {\n            headers: {\n              Authorization: `Bearer ${localStorage.getItem(\"token\")}`,\n            },\n          }\n        ),\n        {\n          success: \"Appointment booked successfully\",\n          error: \"Unable to book appointment\",\n          loading: \"Booking appointment...\",\n        }\n      );\n\n      getAllAppoint();\n    } catch (error) {\n      return error;\n    }\n  };\n\n  return (\n    <>\n      {loading ? (\n        <Loading />\n      ) : (\n        <section className=\"user-section\">\n          <h3 className=\"home-sub-heading\">All Users</h3>\n          {appointments.length > 0 ? (\n            <div className=\"user-container\">\n              <table>\n                <thead>\n                  <tr>\n                    <th>S.No</th>\n                    <th>Doctor</th>\n                    <th>Patient</th>\n                    <th>Appointment Date</th>\n                    <th>Appointment Time</th>\n                    <th>Booking Date</th>\n                    <th>Booking Time</th>\n                    <th>Status</th>\n\n                    <th>Action</th>\n                  </tr>\n                </thead>\n                <tbody>\n                  {appointments?.map((ele, i) => {\n                    return (\n                      <tr key={ele?._id}>\n                        <td>{i + 1}</td>\n                        <td>\n                          {ele?.doctorId?.firstname +\n                            \" \" +\n                            ele?.doctorId?.lastname}\n                        </td>\n                        <td>\n                          {ele?.userId?.firstname + \" \" + ele?.userId?.lastname}\n                        </td>\n                        <td>{ele?.date}</td>\n                        <td>{ele?.time}</td>\n                        <td>{ele?.createdAt.split(\"T\")[0]}</td>\n                        <td>{ele?.updatedAt.split(\"T\")[1].split(\".\")[0]}</td>\n                        <td>{ele?.status}</td>\n                        <td>\n                          <button\n                            className={`btn user-btn accept-btn ${\n                              ele?.status === \"Completed\" ? \"disable-btn\" : \"\"\n                            }`}\n                            disabled={ele?.status === \"Completed\"}\n                            onClick={() => complete(ele)}\n                          >\n                            Complete\n                          </button>\n                        </td>\n                      </tr>\n                    );\n                  })}\n                </tbody>\n              </table>\n            </div>\n          ) : (\n            <Empty />\n          )}\n        </section>\n      )}\n    </>\n  );\n};\n\nexport default AdminAppointments;\n","import React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport toast from \"react-hot-toast\";\nimport Loading from \"./Loading\";\nimport { setLoading } from \"../redux/reducers/rootSlice\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport Empty from \"./Empty\";\nimport fetchData from \"../helper/apiCall\";\nimport \"../styles/user.css\";\n\n\naxios.defaults.baseURL = process.env.REACT_APP_SERVER_DOMAIN;\n\nconst AdminDoctors = () => {\n  const [doctors, setDoctors] = useState([]);\n  const dispatch = useDispatch();\n  const { loading } = useSelector((state) => state.root);\n\n  const getAllDoctors = async (e) => {\n    try {\n      dispatch(setLoading(true));\n      const temp = await fetchData(`/doctor/getalldoctors`);\n      setDoctors(temp);\n      dispatch(setLoading(false));\n    } catch (error) {}\n  };\n\n  const deleteUser = async (userId) => {\n    try {\n      const confirm = window.confirm(\"Are you sure you want to delete?\");\n      if (confirm) {\n        const { data } = await toast.promise(\n          axios.put(\n            \"/doctor/deletedoctor\",\n            { userId },\n            {\n              headers: {\n                authorization: `Bearer ${localStorage.getItem(\"token\")}`,\n              },\n            }\n          ),\n          {\n            success: \"Doctor deleted successfully\",\n            error: \"Unable to delete Doctor\",\n            loading: \"Deleting Doctor...\",\n          }\n        );\n        getAllDoctors();\n      }\n    } catch (error) {\n      return error;\n    }\n  };\n\n  useEffect(() => {\n    getAllDoctors();\n  }, []);\n\n  return (\n    <>\n      {loading ? (\n        <Loading />\n      ) : (\n        <section className=\"user-section\">\n          <h3 className=\"home-sub-heading\">All Doctors</h3>\n          {doctors.length > 0 ? (\n            <div className=\"user-container\">\n              <table>\n                <thead>\n                  <tr>\n                    <th>S.No</th>\n                    <th>Pic</th>\n                    <th>First Name</th>\n                    <th>Last Name</th>\n                    <th>Email</th>\n                    <th>Mobile No.</th>\n                    <th>Experience</th>\n                    <th>Specialization</th>\n                    <th>Fees</th>\n                    <th>Remove</th>\n                  </tr>\n                </thead>\n                <tbody>\n                  {doctors?.map((ele, i) => {\n                    return (\n                      <tr key={ele?._id}>\n                        <td>{i + 1}</td>\n                        <td>\n                          <img\n                            className=\"user-table-pic\"\n                            src={ele?.userId?.pic}\n                            alt={ele?.userId?.firstname}\n                          />\n                        </td>\n                        <td>{ele?.userId?.firstname}</td>\n                        <td>{ele?.userId?.lastname}</td>\n                        <td>{ele?.userId?.email}</td>\n                        <td>{ele?.userId?.mobile}</td>\n                        <td>{ele?.experience}</td>\n                        <td>{ele?.specialization}</td>\n                        <td>{ele?.fees}</td>\n                        <td className=\"select\">\n                          <button\n                            className=\"btn user-btn\"\n                            onClick={() => {\n                              deleteUser(ele?.userId?._id);\n                            }}\n                          >\n                            Remove\n                          </button>\n                        </td>\n                      </tr>\n                    );\n                  })}\n                </tbody>\n              </table>\n            </div>\n          ) : (\n            <Empty />\n          )}\n        </section>\n      )}\n    </>\n  );\n};\n\nexport default AdminDoctors;\n","import React from \"react\";\nimport {\n  FaHome,\n  FaList,\n  FaUser,\n  FaUserMd,\n  FaUsers,\n  FaEnvelope,\n  FaRegCalendarTimes,\n  FaMusic,\n} from \"react-icons/fa\";\nimport \"../styles/sidebar.css\";\nimport { NavLink, useNavigate } from \"react-router-dom\";\nimport { MdLogout } from \"react-icons/md\";\nimport { useDispatch } from \"react-redux\";\nimport { setUserInfo } from \"../redux/reducers/rootSlice\";\n\nconst Sidebar = () => {\n  const dispatch = useDispatch();\n  const navigate = useNavigate();\n\n  const sidebar = [\n    {\n      name: \"Home\",\n      path: \"/\",\n      icon: <FaHome />,\n    },\n    {\n      name: \"Users\",\n      path: \"/dashboard/users\",\n      icon: <FaUsers />,\n    },\n    {\n      name: \"Peers\",\n      path: \"/dashboard/doctors\",\n      icon: <FaUserMd />,\n    },\n    {\n      name: \"Appointments\",\n      path: \"/dashboard/appointments\",\n      icon: <FaList />,\n    },\n    {\n      name: \"Applications\",\n      path: \"/dashboard/applications\",\n      icon: <FaEnvelope />,\n    },\n    {\n      name: \"Profile\",\n      path: \"/profile\",\n      icon: <FaUser />,\n    },\n    {\n      name: \"Events\",\n      path: \"/dashboard/events\",\n      icon: <FaRegCalendarTimes />,\n    },\n    {\n      name: \"Tracks\",\n      path: \"/dashboard/tracks\",\n      icon: <FaMusic />,\n    },\n  ];\n\n  const logoutFunc = () => {\n    dispatch(setUserInfo({}));\n    localStorage.removeItem(\"token\");\n    navigate(\"/login\");\n  };\n\n  return (\n    <>\n      <section className=\"sidebar-section flex-center\">\n        <div className=\"sidebar-container\">\n          <ul>\n            {sidebar.map((ele, i) => {\n              return (\n                <li key={i}>\n                  {ele.icon}\n                  <NavLink to={ele.path}>{ele.name}</NavLink>\n                </li>\n              );\n            })}\n          </ul>\n          <div className=\"logout-container\">\n            <MdLogout />\n            <p onClick={logoutFunc}>Logout</p>\n          </div>\n        </div>\n      </section>\n    </>\n  );\n};\n\nexport default Sidebar;\n","import React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport toast from \"react-hot-toast\";\nimport Loading from \"./Loading\";\nimport { setLoading } from \"../redux/reducers/rootSlice\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport Empty from \"./Empty\";\nimport fetchData from \"../helper/apiCall\";\n\naxios.defaults.baseURL = process.env.REACT_APP_SERVER_DOMAIN;\n\nconst Users = () => {\n  const [users, setUsers] = useState([]);\n  const dispatch = useDispatch();\n  const { loading } = useSelector((state) => state.root);\n\n  const getAllUsers = async (e) => {\n    try {\n      dispatch(setLoading(true));\n      const temp = await fetchData(`/user/getallusers`);\n      setUsers(temp);\n      dispatch(setLoading(false));\n    } catch (error) {}\n  };\n\n  const deleteUser = async (userId) => {\n    try {\n      const confirm = window.confirm(\"Are you sure you want to delete?\");\n      if (confirm) {\n        const { data } = await toast.promise(\n          axios.delete(\"/user/deleteuser\", {\n            headers: {\n              authorization: `Bearer ${localStorage.getItem(\"token\")}`,\n            },\n            data: { userId },\n          }),\n          {\n            pending: \"Deleting in...\",\n            success: \"User deleted successfully\",\n            error: \"Unable to delete user\",\n            loading: \"Deleting user...\",\n          }\n        );\n        getAllUsers();\n      }\n    } catch (error) {\n      return error;\n    }\n  };\n\n  useEffect(() => {\n    getAllUsers();\n  }, []);\n\n  return (\n    <>\n      {loading ? (\n        <Loading />\n      ) : (\n        <section className=\"user-section\">\n          <h3 className=\"home-sub-heading\">All Users</h3>\n          {users.length > 0 ? (\n            <div className=\"user-container\">\n              <table>\n                <thead>\n                  <tr>\n                    <th>S.No</th>\n                    <th>Pic</th>\n                    <th>First Name</th>\n                    <th>Last Name</th>\n                    <th>Email</th>\n                    <th>Mobile No.</th>\n                    <th>Age</th>\n                    <th>Gender</th>\n                    <th>Is Doctor</th>\n                    <th>Remove</th>\n                  </tr>\n                </thead>\n                <tbody>\n                  {users?.map((ele, i) => {\n                    return (\n                      <tr key={ele?._id}>\n                        <td>{i + 1}</td>\n                        <td>\n                          <img\n                            className=\"user-table-pic\"\n                            src={ele?.pic}\n                            alt={ele?.firstname}\n                          />\n                        </td>\n                        <td>{ele?.firstname}</td>\n                        <td>{ele?.lastname}</td>\n                        <td>{ele?.email}</td>\n                        <td>{ele?.mobile}</td>\n                        <td>{ele?.age}</td>\n                        <td>{ele?.gender}</td>\n                        <td>{ele?.isDoctor ? \"Yes\" : \"No\"}</td>\n                        <td className=\"select\">\n                          <button\n                            className=\"btn user-btn\"\n                            onClick={() => {\n                              deleteUser(ele?._id);\n                            }}\n                          >\n                            Remove\n                          </button>\n                        </td>\n                      </tr>\n                    );\n                  })}\n                </tbody>\n              </table>\n            </div>\n          ) : (\n            <Empty />\n          )}\n        </section>\n      )}\n    </>\n  );\n};\n\nexport default Users;\n","import axios from \"axios\";\n\nconst CloudinaryUpload = async (file) => {\n  const formData = new FormData();\n  formData.append(\"file\", file);\n  formData.append(\"upload_preset\", process.env.REACT_APP_CLOUDINARY_PRESET);\n  formData.append(\"cloud_name\", process.env.REACT_APP_CLOUDINARY_CLOUD_NAME);\n  const res = await axios.post(\n    process.env.REACT_APP_CLOUDINARY_BASE_URL,\n    formData\n  );\n  return res.data.url;\n};\n\nexport default CloudinaryUpload;\n","import React, { useEffect, useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { useForm } from \"react-hook-form\";\nimport {\n  createEvent,\n  deleteEvent,\n  updateEvent,\n  fetchEvents,\n} from \"../redux/reducers/events.slice\";\nimport Modal from \"react-modal\";\nimport CloudinaryUpload from \"../utils/cloudinaryUpload\";\n\nModal.setAppElement(\"#root\");\n\nconst AdminEvents = () => {\n  const { register, handleSubmit, reset, watch } = useForm();\n\n  const [modalIsOpen, setIsOpen] = useState(false);\n  const [currentPage, setCurrentPage] = useState(1);\n  const [selectedImage, setSelectedImage] = useState(null);\n\n  const { data: events, error } = useSelector((state) => state.event);\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(fetchEvents(currentPage));\n  }, [dispatch, currentPage]);\n\n  const openModal = (event) => {\n    setIsOpen(true);\n\n    reset(event);\n  };\n\n  const closeModal = () => {\n    setIsOpen(false);\n    reset();\n  };\n\n  const onSubmit = async (data) => {\n    try {\n      if (selectedImage) {\n        data.image = await CloudinaryUpload(selectedImage);\n      }\n\n      if (data._id) {\n        dispatch(updateEvent({ id: data._id, event: data }));\n      } else {\n        dispatch(createEvent(data));\n      }\n    } catch (error) {\n    } finally {\n      closeModal();\n      dispatch(fetchEvents(currentPage));\n    }\n  };\n\n  const deleteHandler = (id) => {\n    dispatch(deleteEvent(id));\n  };\n\n  const prevPage = () => {\n    setCurrentPage((oldPage) => Math.max(oldPage - 1, 1));\n  };\n\n  const nextPage = () => {\n    setCurrentPage((oldPage) => oldPage + 1);\n  };\n\n  const customStyles = {\n    content: {\n      top: \"50%\",\n      left: \"50%\",\n      right: \"auto\",\n      bottom: \"auto\",\n      transform: \"translate(-50%, -50%)\",\n    },\n  };\n\n  return (\n    <div className=\"p-4\">\n      <h1 className=\"text-2xl font-bold mb-4\">Events</h1>\n      <button className=\"btn btn-primary mb-10\" onClick={() => setIsOpen(true)}>\n        Create Event\n      </button>\n\n      <Modal\n        isOpen={modalIsOpen}\n        onRequestClose={closeModal}\n        style={customStyles}\n        contentLabel=\"Example Modal\"\n      >\n        <h2 className=\"mb-4 text-lg font-bold\">Create New Event</h2>\n        <form className=\"space-y-4\" onSubmit={handleSubmit(onSubmit)}>\n          <input\n            className=\"w-full px-4 py-2 border border-gray-300 rounded-md\"\n            name=\"title\"\n            placeholder=\"Title\"\n            {...register(\"title\", { required: true })}\n          />\n\n          <input\n            className=\"w-full px-4 py-2 border border-gray-300 rounded-md\"\n            name=\"date\"\n            type=\"date\"\n            {...register(\"date\", { required: true })}\n          />\n\n          <textarea\n            className=\"w-full px-4 py-2 border border-gray-300 rounded-md\"\n            name=\"details\"\n            placeholder=\"Details\"\n            {...register(\"details\", { required: true })}\n          />\n\n          <div>\n            {!selectedImage && watch(\"image\") && (\n              <img\n                src={watch(\"image\")}\n                alt=\"preview\"\n                className=\"object-cover w-24 h-24\"\n              />\n            )}\n            <input\n              className=\"w-full px-4 py-2 mt-4 border border-gray-300 rounded-md\"\n              type=\"file\"\n              onChange={(e) => setSelectedImage(e.target.files[0])}\n            />\n          </div>\n\n          <input\n            className=\"w-full p-2 mt-4 text-white bg-blue-600 rounded cursor-pointer hover:bg-blue-500\"\n            type=\"submit\"\n            value=\"Submit\"\n          />\n        </form>\n      </Modal>\n\n      {error && <p className=\"text-red-500\">Error: {error}</p>}\n      {events?.length > 0 ? (\n        <div className=\"overflow-x-auto\">\n          <table className=\"min-w-full bg-white table-auto\">\n            <thead>\n              <tr className=\"text-gray-700\">\n                <th className=\"px-4 py-2\">Image</th>\n                <th className=\"px-4 py-2\">Title</th>\n                <th className=\"px-4 py-2\">Description</th>\n                <th className=\"px-4 py-2\">Actions</th>\n              </tr>\n            </thead>{\" \"}\n            <tbody className=\"text-gray-600 text-sm font-light\">\n              {events?.map((event, index) => (\n                <tr\n                  key={event._id}\n                  className={index % 2 === 0 ? \"bg-gray-100\" : \"\"}\n                >\n                  <td className=\"px-4 py-2\">\n                    <img\n                      src={event.image}\n                      alt={event.title}\n                      className=\"w-20 h-20 object-cover\"\n                    />\n                  </td>\n                  <td className=\"px-4 py-2\">{event.title}</td>\n                  <td className=\"px-4 py-2\">{event.details}</td>\n                  <td className=\"px-4 py-2\">\n                    <button\n                      className=\"py-2 px-4 bg-blue-600 text-white rounded mr-2 hover:bg-blue-500\"\n                      onClick={() => openModal(event)}\n                    >\n                      Edit\n                    </button>\n                    <button\n                      className=\"py-2 px-4 bg-red-600 text-white rounded hover:bg-red-500\"\n                      onClick={() => deleteHandler(event._id)}\n                    >\n                      Delete\n                    </button>\n                  </td>\n                </tr>\n              ))}\n            </tbody>\n          </table>\n        </div>\n      ) : (\n        <p>No Events Found</p>\n      )}\n    </div>\n  );\n};\n\nexport default AdminEvents;\n","import React, { useEffect, useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { useForm } from \"react-hook-form\";\nimport {\n  createTrack,\n  deleteTrack,\n  updateTrack,\n  fetchTracks,\n} from \"../redux/reducers/tracks.slice\";\nimport Modal from \"react-modal\";\nimport CloudinaryUpload from \"../utils/cloudinaryUpload\";\n\nModal.setAppElement(\"#root\");\n\nconst AdminTracks = () => {\n  const { register, handleSubmit, reset, watch } = useForm();\n\n  const [modalIsOpen, setIsOpen] = useState(false);\n  const [currentPage, setCurrentPage] = useState(1);\n  const [selectedTrack, setSelectedTrack] = useState(null);\n  const [selectedImage, setSelectedImage] = useState(null);\n\n  const { data: tracks, loading, error } = useSelector((state) => state.track);\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(fetchTracks(currentPage));\n  }, [dispatch, currentPage]);\n\n  const openModal = (track) => {\n    setIsOpen(true);\n\n    reset(track);\n  };\n\n  const closeModal = () => {\n    setIsOpen(false);\n    reset();\n  };\n\n  const onSubmit = async (data) => {\n    try {\n      if (selectedTrack) {\n        data.link = await CloudinaryUpload(selectedTrack);\n      }\n\n      if (selectedImage) {\n        data.image = await CloudinaryUpload(selectedImage);\n      }\n\n      if (data._id) {\n        dispatch(updateTrack({ id: data._id, track: data }));\n      } else {\n        dispatch(createTrack(data));\n      }\n    } catch (error) {\n    } finally {\n      closeModal();\n      dispatch(fetchTracks(currentPage));\n    }\n  };\n\n  const deleteHandler = (id) => {\n    dispatch(deleteTrack(id));\n  };\n\n  const prevPage = () => {\n    setCurrentPage((oldPage) => Math.max(oldPage - 1, 1));\n  };\n\n  const nextPage = () => {\n    setCurrentPage((oldPage) => oldPage + 1);\n  };\n\n  const customStyles = {\n    content: {\n      top: \"50%\",\n      left: \"50%\",\n      right: \"auto\",\n      bottom: \"auto\",\n      transform: \"translate(-50%, -50%)\",\n    },\n  };\n\n  const trackTypes = [\"breathing\", \"meditation\"];\n\n  return (\n    <div className=\"p-4\">\n      <h1 className=\"text-2xl font-bold mb-4\">Tracks</h1>\n      <button className=\"btn btn-primary mb-10\" onClick={() => openModal(null)}>\n        Create Track\n      </button>\n\n      <Modal\n        isOpen={modalIsOpen}\n        onRequestClose={closeModal}\n        contentLabel=\"Track Modal\"\n        style={customStyles}\n      >\n        <h2 className=\"text-2xl font-bold my-4\">Create New Track</h2>\n        <form className=\"space-y-4\" onSubmit={handleSubmit(onSubmit)}>\n          <div>\n            <input\n              {...register(\"title\", { required: true })}\n              placeholder=\"Title\"\n              className=\"w-full p-2 border border-gray-200 rounded\"\n            />\n          </div>\n\n          <div>\n            <label\n              className=\"block text-gray-700 text-sm font-bold mb-2\"\n              htmlFor=\"image\"\n            >\n              Image\n            </label>\n            {selectedImage && (\n              <img\n                src={URL.createObjectURL(selectedImage)}\n                alt=\"preview\"\n                style={{ width: \"100px\", height: \"100px\" }}\n              />\n            )}\n            {!selectedImage && watch(\"image\") && (\n              <img\n                src={watch(\"image\")}\n                alt=\"preview\"\n                style={{ width: \"100px\", height: \"100px\" }}\n              />\n            )}\n            <input\n              className=\"w-full p-2 mb-3 border border-gray-200 rounded\"\n              type=\"file\"\n              name=\"image\"\n              placeholder=\"image\"\n              onChange={(e) => setSelectedImage(e.target.files[0])}\n            />\n          </div>\n\n          <div>\n            <label\n              className=\"block text-gray-700 text-sm font-bold mb-2\"\n              htmlFor=\"link\"\n            >\n              Link\n            </label>\n            <input\n              className=\"w-full p-2 mb-3 border border-gray-200 rounded\"\n              type=\"file\"\n              name=\"link\"\n              placeholder=\"link\"\n              onChange={(e) => setSelectedTrack(e.target.files[0])}\n            />\n          </div>\n\n          <div>\n            <label\n              className=\"block text-gray-700 text-sm font-bold mb-2\"\n              htmlFor=\"type\"\n            >\n              Type of Track\n            </label>\n            <select\n              {...register(\"type\", { required: true })}\n              id=\"type\"\n              className=\"w-full p-2 border border-gray-200 rounded\"\n            >\n              <option value=\"\">Select a type</option>\n              {trackTypes.map((type) => (\n                <option key={type} value={type}>\n                  {type}\n                </option>\n              ))}\n            </select>\n          </div>\n\n          <div>\n            <textarea\n              {...register(\"description\", { required: true })}\n              placeholder=\"Description\"\n              className=\"w-full p-2 border border-gray-200 rounded\"\n            />\n          </div>\n\n          <button\n            type=\"submit\"\n            className=\"py-2 px-4 bg-green-500 text-white rounded shadow\"\n          >\n            Create\n          </button>\n        </form>\n      </Modal>\n\n      {loading && <div>Loading...</div>}\n      {error && <div>Error: {error}</div>}\n\n      {loading && <div>Loading...</div>}\n      {error && <div>Error: {error}</div>}\n\n      <table className=\"w-full table-auto\">\n        <thead>\n          <tr>\n            <th>Title</th>\n            <th>Description</th>\n            <th>Image</th>\n            <th>Link</th>\n            <th>Type</th>\n            <th>Actions</th>\n          </tr>\n        </thead>\n        <tbody>\n          {tracks?.map((track) => (\n            <tr key={track._id}>\n              <td>{track.title}</td>\n              <td>{track.description}</td>\n              <td>\n                <img\n                  src={track.image}\n                  alt={track.title}\n                  style={{ width: \"50px\", height: \"50px\" }}\n                />\n              </td>\n              <td>\n                <a href={track.link} target=\"_blank\" rel=\"noreferrer\">\n                  View file\n                </a>\n              </td>\n              <td>{track.type}</td>\n              <td>\n                <button\n                  onClick={() => openModal(track)}\n                  className=\"py-1 px-4 bg-blue-500 text-white rounded mr-2\"\n                >\n                  Edit\n                </button>\n                <button\n                  onClick={() => deleteHandler(track._id)}\n                  className=\"py-1 px-4 bg-red-500 text-white rounded\"\n                >\n                  Delete\n                </button>\n              </td>\n            </tr>\n          ))}\n        </tbody>\n      </table>\n\n      <div className=\"mt-4 flex justify-between\">\n        <button\n          onClick={prevPage}\n          disabled={currentPage === 1}\n          className=\"py-1 px-4 bg-gray-500 text-white rounded\"\n        >\n          Previous Page\n        </button>\n        <button\n          onClick={nextPage}\n          className=\"py-1 px-4 bg-gray-500 text-white rounded\"\n        >\n          Next Page\n        </button>\n      </div>\n    </div>\n  );\n};\n\nexport default AdminTracks;\n","import React from \"react\";\nimport AdminApplications from \"../components/AdminApplications\";\nimport AdminAppointments from \"../components/AdminAppointments\";\nimport AdminDoctors from \"../components/AdminDoctors\";\nimport Sidebar from \"../components/Sidebar\";\nimport Users from \"../components/Users\";\nimport AdminEvents from \"../components/AdminEvents\";\nimport AdminTracks from \"../components/AdminTracks\";\n\nconst Dashboard = (props) => {\n  const { type } = props;\n  return (\n    <>\n      <section className=\"layout-section\">\n        <div className=\"layout-container\">\n          <Sidebar />\n          {type === \"users\" ? (\n            <Users />\n          ) : type === \"doctors\" ? (\n            <AdminDoctors />\n          ) : type === \"applications\" ? (\n            <AdminApplications />\n          ) : type === \"appointments\" ? (\n            <AdminAppointments />\n          ) : type === \"events\" ? (\n            <AdminEvents />\n          ) : type === \"tracks\" ? (\n            <AdminTracks />\n          ) : (\n            <></>\n          )}\n        </div>\n      </section>\n    </>\n  );\n};\n\nexport default Dashboard;\n"],"names":["className","axios","process","useState","applications","setApplications","dispatch","useDispatch","loading","useSelector","state","root","getAllApp","e","setLoading","fetchData","temp","acceptUser","userId","window","confirm","toast","id","headers","authorization","localStorage","getItem","data","success","error","deleteUser","useEffect","Loading","length","map","ele","i","src","pic","alt","firstname","lastname","email","mobile","experience","specialization","onClick","_id","Empty","appointments","setAppointments","getAllAppoint","complete","appointid","doctorId","doctorname","Authorization","date","time","createdAt","split","updatedAt","status","disabled","doctors","setDoctors","getAllDoctors","fees","navigate","useNavigate","sidebar","name","path","icon","to","setUserInfo","removeItem","users","setUsers","getAllUsers","pending","age","gender","isDoctor","CloudinaryUpload","file","formData","FormData","append","res","url","Modal","useForm","register","handleSubmit","reset","watch","modalIsOpen","setIsOpen","currentPage","selectedImage","setSelectedImage","event","events","fetchEvents","closeModal","onSubmit","image","updateEvent","createEvent","isOpen","onRequestClose","style","content","top","left","right","bottom","transform","contentLabel","placeholder","required","type","onChange","target","files","value","index","title","details","openModal","deleteEvent","setCurrentPage","selectedTrack","setSelectedTrack","track","tracks","fetchTracks","link","updateTrack","createTrack","htmlFor","URL","createObjectURL","width","height","description","href","rel","deleteTrack","oldPage","Math","max","props"],"sourceRoot":""}